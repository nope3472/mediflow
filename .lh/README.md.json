{
    "sourceFile": "README.md",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1744652746624,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1744652790794,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -165,28 +165,4 @@\n 3. Commit your changes (`git commit -m 'Add some AmazingFeature'`)\r\n 4. Push to the branch (`git push origin feature/AmazingFeature`)\r\n 5. Open a Pull Request\r\n \r\n-## License\r\n-\r\n-This project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.\r\n-\r\n-## Acknowledgments\r\n-\r\n-- Flutter team for the amazing framework\r\n-- Firebase for backend services\r\n-- Google for Gemini AI integration\r\n-- All contributors and supporters\r\n-\r\n-## Support\r\n-\r\n-For support, email support@mediflow.com or join our Slack channel.\r\n-\r\n-## Roadmap\r\n-\r\n-- [ ] Multi-language support\r\n-- [ ] Integration with wearable devices\r\n-- [ ] Telemedicine features\r\n-- [ ] Medication reminders\r\n-- [ ] Health analytics dashboard\r\n-- [ ] Family health management\r\n-- [ ] Emergency contact system\r\n"
                }
            ],
            "date": 1744652746624,
            "name": "Commit-0",
            "content": "# MediFlow - Your Personal Health Companion\r\n\r\nMediFlow is a comprehensive healthcare management application built with Flutter and Firebase. It provides users with a seamless way to manage their health records, consult with doctors, and access medical assistance through an AI-powered chatbot.\r\n\r\n## Features\r\n\r\n### 1. Authentication\r\n- Secure email/password authentication using Firebase Auth\r\n- User registration and login functionality\r\n- Session management and persistence\r\n\r\n### 2. Health Profile Management\r\n- Personal medical information storage\r\n- Physical measurements tracking\r\n- Medical history documentation\r\n- Blood group and allergy information\r\n- BMI calculation and tracking\r\n\r\n### 3. AI-Powered Medical Assistant\r\n- Interactive chatbot for medical queries\r\n- Pre-visit questionnaire\r\n- Symptom analysis\r\n- Medical advice and information\r\n- Chat history tracking\r\n\r\n### 4. Doctor Consultation\r\n- Video consultation scheduling\r\n- Phone consultation booking\r\n- Chat consultation with doctors\r\n- Appointment management\r\n- Consultation history\r\n\r\n### 5. Medical Reports\r\n- Chat history documentation\r\n- Consultation summaries\r\n- Medical record storage\r\n- Report sharing capabilities\r\n\r\n### 6. Notifications\r\n- Appointment reminders\r\n- Consultation updates\r\n- Medical report availability\r\n- Health check reminders\r\n\r\n### 7. Settings and Preferences\r\n- Dark mode support\r\n- Notification preferences\r\n- Language selection\r\n- Account management\r\n\r\n## Technical Stack\r\n\r\n- **Frontend**: Flutter\r\n- **Backend**: Firebase\r\n  - Authentication: Firebase Auth\r\n  - Database: Cloud Firestore\r\n  - Storage: Firebase Storage\r\n- **AI Integration**: Google Gemini API\r\n- **State Management**: Provider\r\n- **UI Components**: Material Design\r\n- **Fonts**: Google Fonts (Poppins)\r\n\r\n## Project Structure\r\n\r\n```\r\nlib/\r\n├── main.dart                 # Application entry point\r\n├── services/\r\n│   ├── firestore_service.dart # Firebase database operations\r\n│   └── medical_history_service.dart # Medical history management\r\n├── screens/\r\n│   ├── login.dart            # Login screen\r\n│   ├── register.dart         # Registration screen\r\n│   ├── home_dashboard.dart   # Main dashboard\r\n│   ├── medical_summary.dart  # Health profile\r\n│   ├── chatbot.dart          # AI medical assistant\r\n│   ├── report_history.dart   # Medical reports\r\n│   ├── contact_doctor.dart   # Doctor consultation\r\n│   ├── video_consultation.dart # Video call scheduling\r\n│   ├── chat_consultation.dart # Doctor chat\r\n│   └── settings_screen.dart  # User preferences\r\n├── models/\r\n│   └── patient_profile.dart  # Patient data model\r\n└── widgets/                  # Reusable UI components\r\n```\r\n\r\n## Setup Instructions\r\n\r\n1. **Prerequisites**\r\n   - Flutter SDK (latest version)\r\n   - Dart SDK (latest version)\r\n   - Android Studio / VS Code\r\n   - Firebase account\r\n\r\n2. **Firebase Setup**\r\n   - Create a new Firebase project\r\n   - Enable Authentication (Email/Password)\r\n   - Set up Firestore database\r\n   - Add Firebase configuration files\r\n   - Enable Cloud Storage\r\n\r\n3. **Installation**\r\n   ```bash\r\n   # Clone the repository\r\n   git clone https://github.com/yourusername/medi_flow.git\r\n   \r\n   # Navigate to project directory\r\n   cd medi_flow\r\n   \r\n   # Install dependencies\r\n   flutter pub get\r\n   \r\n   # Run the application\r\n   flutter run\r\n   ```\r\n\r\n4. **Environment Configuration**\r\n   - Add your Firebase configuration in `lib/firebase_options.dart`\r\n   - Set up Google Gemini API key for AI features\r\n   - Configure notification settings\r\n\r\n## Usage Guide\r\n\r\n1. **Registration and Login**\r\n   - Create a new account with email and password\r\n   - Complete the initial health profile setup\r\n   - Access the dashboard after successful login\r\n\r\n2. **Health Profile**\r\n   - Enter personal information\r\n   - Add medical history\r\n   - Update physical measurements\r\n   - Track health metrics\r\n\r\n3. **Medical Assistant**\r\n   - Access the AI chatbot\r\n   - Ask medical questions\r\n   - Get symptom analysis\r\n   - View chat history\r\n\r\n4. **Doctor Consultation**\r\n   - Schedule video/phone consultations\r\n   - Chat with doctors\r\n   - View appointment history\r\n   - Access consultation reports\r\n\r\n5. **Reports and History**\r\n   - View medical reports\r\n   - Access consultation summaries\r\n   - Track health progress\r\n   - Share reports with doctors\r\n\r\n## Security Features\r\n\r\n- End-to-end encryption for sensitive data\r\n- Secure authentication with Firebase\r\n- Role-based access control\r\n- Data privacy compliance\r\n- Secure API communication\r\n\r\n## Contributing\r\n\r\n1. Fork the repository\r\n2. Create your feature branch (`git checkout -b feature/AmazingFeature`)\r\n3. Commit your changes (`git commit -m 'Add some AmazingFeature'`)\r\n4. Push to the branch (`git push origin feature/AmazingFeature`)\r\n5. Open a Pull Request\r\n\r\n## License\r\n\r\nThis project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.\r\n\r\n## Acknowledgments\r\n\r\n- Flutter team for the amazing framework\r\n- Firebase for backend services\r\n- Google for Gemini AI integration\r\n- All contributors and supporters\r\n\r\n## Support\r\n\r\nFor support, email support@mediflow.com or join our Slack channel.\r\n\r\n## Roadmap\r\n\r\n- [ ] Multi-language support\r\n- [ ] Integration with wearable devices\r\n- [ ] Telemedicine features\r\n- [ ] Medication reminders\r\n- [ ] Health analytics dashboard\r\n- [ ] Family health management\r\n- [ ] Emergency contact system\r\n"
        }
    ]
}