{
    "sourceFile": "lib/report_history.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1744617133417,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1744617349804,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,9 @@\n import 'package:flutter/material.dart';\r\n import 'package:google_fonts/google_fonts.dart';\r\n import 'package:medi_flow_new/models/patient_profile.dart';\r\n import 'package:medi_flow_new/services/medical_history_service.dart';\r\n+import 'package:intl/intl.dart';\r\n \r\n class ReportHistory extends StatefulWidget {\r\n   const ReportHistory({super.key});\r\n \r\n@@ -13,8 +14,9 @@\n class _ReportHistoryState extends State<ReportHistory> {\r\n   final MedicalHistoryService _medicalHistoryService = MedicalHistoryService();\r\n   List<MedicalReport> _reports = [];\r\n   bool _isLoading = true;\r\n+  String _selectedFilter = 'all';\r\n \r\n   @override\r\n   void initState() {\r\n     super.initState();\r\n@@ -26,80 +28,220 @@\n       final profile = await _medicalHistoryService.getPatientProfile();\r\n       if (profile != null) {\r\n         setState(() {\r\n           _reports = profile.reports;\r\n+          _reports.sort((a, b) => b.date.compareTo(a.date)); // Sort by date descending\r\n           _isLoading = false;\r\n         });\r\n       }\r\n     } catch (e) {\r\n       setState(() {\r\n         _isLoading = false;\r\n       });\r\n       if (mounted) {\r\n-        ScaffoldMessenger.of(\r\n-          context,\r\n-        ).showSnackBar(SnackBar(content: Text('Error loading reports: $e')));\r\n+        ScaffoldMessenger.of(context).showSnackBar(\r\n+          SnackBar(content: Text('Error loading reports: $e')),\r\n+        );\r\n       }\r\n     }\r\n   }\r\n \r\n+  List<MedicalReport> _getFilteredReports() {\r\n+    if (_selectedFilter == 'all') return _reports;\r\n+    return _reports.where((report) => report.type == _selectedFilter).toList();\r\n+  }\r\n+\r\n+  String _getReportTypeIcon(String type) {\r\n+    switch (type.toLowerCase()) {\r\n+      case 'chat_history':\r\n+        return 'üí¨';\r\n+      case 'medical_exam':\r\n+        return 'üè•';\r\n+      case 'lab_result':\r\n+        return 'üî¨';\r\n+      case 'prescription':\r\n+        return 'üíä';\r\n+      default:\r\n+        return 'üìÑ';\r\n+    }\r\n+  }\r\n+\r\n+  String _formatDate(DateTime date) {\r\n+    final now = DateTime.now();\r\n+    final difference = now.difference(date);\r\n+\r\n+    if (difference.inDays == 0) {\r\n+      return 'Today, ${DateFormat('h:mm a').format(date)}';\r\n+    } else if (difference.inDays == 1) {\r\n+      return 'Yesterday, ${DateFormat('h:mm a').format(date)}';\r\n+    } else if (difference.inDays < 7) {\r\n+      return DateFormat('EEEE, h:mm a').format(date);\r\n+    } else {\r\n+      return DateFormat('MMM d, y, h:mm a').format(date);\r\n+    }\r\n+  }\r\n+\r\n+  Widget _buildFilterChips() {\r\n+    return SingleChildScrollView(\r\n+      scrollDirection: Axis.horizontal,\r\n+      padding: const EdgeInsets.symmetric(horizontal: 16, vertical: 8),\r\n+      child: Row(\r\n+        children: [\r\n+          FilterChip(\r\n+            label: const Text('All'),\r\n+            selected: _selectedFilter == 'all',\r\n+            onSelected: (selected) {\r\n+              setState(() => _selectedFilter = 'all');\r\n+            },\r\n+          ),\r\n+          const SizedBox(width: 8),\r\n+          FilterChip(\r\n+            label: const Text('Chat History'),\r\n+            selected: _selectedFilter == 'chat_history',\r\n+            onSelected: (selected) {\r\n+              setState(() => _selectedFilter = 'chat_history');\r\n+            },\r\n+          ),\r\n+          const SizedBox(width: 8),\r\n+          FilterChip(\r\n+            label: const Text('Medical Exams'),\r\n+            selected: _selectedFilter == 'medical_exam',\r\n+            onSelected: (selected) {\r\n+              setState(() => _selectedFilter = 'medical_exam');\r\n+            },\r\n+          ),\r\n+          const SizedBox(width: 8),\r\n+          FilterChip(\r\n+            label: const Text('Lab Results'),\r\n+            selected: _selectedFilter == 'lab_result',\r\n+            onSelected: (selected) {\r\n+              setState(() => _selectedFilter = 'lab_result');\r\n+            },\r\n+          ),\r\n+        ],\r\n+      ),\r\n+    );\r\n+  }\r\n+\r\n   @override\r\n   Widget build(BuildContext context) {\r\n+    final filteredReports = _getFilteredReports();\r\n+\r\n     return Scaffold(\r\n       appBar: AppBar(\r\n-        title: const Text('Report History'),\r\n+        title: const Text('Medical History'),\r\n         backgroundColor: Colors.teal,\r\n       ),\r\n-      body:\r\n-          _isLoading\r\n-              ? const Center(child: CircularProgressIndicator())\r\n-              : _reports.isEmpty\r\n-              ? Center(\r\n-                child: Text(\r\n-                  'No reports available',\r\n-                  style: GoogleFonts.poppins(fontSize: 16),\r\n-                ),\r\n-              )\r\n-              : ListView.builder(\r\n-                padding: const EdgeInsets.all(16),\r\n-                itemCount: _reports.length,\r\n-                itemBuilder: (context, index) {\r\n-                  final report = _reports[index];\r\n-                  return Card(\r\n-                    margin: const EdgeInsets.only(bottom: 16),\r\n-                    child: ExpansionTile(\r\n-                      title: Text(\r\n-                        'Report ${_reports.length - index}',\r\n-                        style: GoogleFonts.poppins(fontWeight: FontWeight.bold),\r\n-                      ),\r\n-                      subtitle: Text(\r\n-                        'Date: ${report.date.toString().split(' ')[0]}',\r\n-                        style: GoogleFonts.poppins(),\r\n-                      ),\r\n-                      children: [\r\n-                        Padding(\r\n-                          padding: const EdgeInsets.all(16),\r\n+      body: _isLoading\r\n+          ? const Center(child: CircularProgressIndicator())\r\n+          : Column(\r\n+              children: [\r\n+                _buildFilterChips(),\r\n+                Expanded(\r\n+                  child: filteredReports.isEmpty\r\n+                      ? Center(\r\n                           child: Column(\r\n-                            crossAxisAlignment: CrossAxisAlignment.start,\r\n+                            mainAxisAlignment: MainAxisAlignment.center,\r\n                             children: [\r\n+                              const Icon(\r\n+                                Icons.history,\r\n+                                size: 64,\r\n+                                color: Colors.grey,\r\n+                              ),\r\n+                              const SizedBox(height: 16),\r\n                               Text(\r\n-                                'Summary:',\r\n+                                'No reports available',\r\n                                 style: GoogleFonts.poppins(\r\n-                                  fontWeight: FontWeight.bold,\r\n+                                  fontSize: 16,\r\n+                                  color: Colors.grey,\r\n                                 ),\r\n                               ),\r\n-                              const SizedBox(height: 8),\r\n-                              Text(\r\n-                                report.content,\r\n-                                style: GoogleFonts.poppins(),\r\n-                              ),\r\n                             ],\r\n                           ),\r\n+                        )\r\n+                      : ListView.builder(\r\n+                          padding: const EdgeInsets.all(16),\r\n+                          itemCount: filteredReports.length,\r\n+                          itemBuilder: (context, index) {\r\n+                            final report = filteredReports[index];\r\n+                            return Card(\r\n+                              margin: const EdgeInsets.only(bottom: 16),\r\n+                              child: ExpansionTile(\r\n+                                leading: Text(\r\n+                                  _getReportTypeIcon(report.type),\r\n+                                  style: const TextStyle(fontSize: 24),\r\n+                                ),\r\n+                                title: Text(\r\n+                                  'Report ${filteredReports.length - index}',\r\n+                                  style: GoogleFonts.poppins(\r\n+                                    fontWeight: FontWeight.bold,\r\n+                                  ),\r\n+                                ),\r\n+                                subtitle: Text(\r\n+                                  _formatDate(report.date),\r\n+                                  style: GoogleFonts.poppins(\r\n+                                    color: Colors.grey[600],\r\n+                                  ),\r\n+                                ),\r\n+                                children: [\r\n+                                  Padding(\r\n+                                    padding: const EdgeInsets.all(16),\r\n+                                    child: Column(\r\n+                                      crossAxisAlignment:\r\n+                                          CrossAxisAlignment.start,\r\n+                                      children: [\r\n+                                        if (report.metadata != null &&\r\n+                                            report.metadata!.isNotEmpty) ...[\r\n+                                          Text(\r\n+                                            'Details:',\r\n+                                            style: GoogleFonts.poppins(\r\n+                                              fontWeight: FontWeight.bold,\r\n+                                            ),\r\n+                                          ),\r\n+                                          const SizedBox(height: 8),\r\n+                                          ...report.metadata!.entries.map(\r\n+                                            (entry) => Padding(\r\n+                                              padding:\r\n+                                                  const EdgeInsets.only(bottom: 4),\r\n+                                              child: Text(\r\n+                                                '${entry.key}: ${entry.value}',\r\n+                                                style: GoogleFonts.poppins(),\r\n+                                              ),\r\n+                                            ),\r\n+                                          ),\r\n+                                          const SizedBox(height: 16),\r\n+                                        ],\r\n+                                        Text(\r\n+                                          'Summary:',\r\n+                                          style: GoogleFonts.poppins(\r\n+                                            fontWeight: FontWeight.bold,\r\n+                                          ),\r\n+                                        ),\r\n+                                        const SizedBox(height: 8),\r\n+                                        Text(\r\n+                                          report.content,\r\n+                                          style: GoogleFonts.poppins(),\r\n+                                        ),\r\n+                                        if (report.doctorId != null) ...[\r\n+                                          const SizedBox(height: 16),\r\n+                                          Text(\r\n+                                            'Doctor ID: ${report.doctorId}',\r\n+                                            style: GoogleFonts.poppins(\r\n+                                              color: Colors.grey[600],\r\n+                                              fontSize: 12,\r\n+                                            ),\r\n+                                          ),\r\n+                                        ],\r\n+                                      ],\r\n+                                    ),\r\n+                                  ),\r\n+                                ],\r\n+                              ),\r\n+                            );\r\n+                          },\r\n                         ),\r\n-                      ],\r\n-                    ),\r\n-                  );\r\n-                },\r\n-              ),\r\n+                ),\r\n+              ],\r\n+            ),\r\n     );\r\n   }\r\n }\r\n"
                },
                {
                    "date": 1744617650509,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,8 +2,9 @@\n import 'package:google_fonts/google_fonts.dart';\r\n import 'package:medi_flow_new/models/patient_profile.dart';\r\n import 'package:medi_flow_new/services/medical_history_service.dart';\r\n import 'package:intl/intl.dart';\r\n+import 'package:medi_flow_new/medical_form.dart';\r\n \r\n class ReportHistory extends StatefulWidget {\r\n   const ReportHistory({super.key});\r\n \r\n@@ -15,8 +16,9 @@\n   final MedicalHistoryService _medicalHistoryService = MedicalHistoryService();\r\n   List<MedicalReport> _reports = [];\r\n   bool _isLoading = true;\r\n   String _selectedFilter = 'all';\r\n+  bool _hasProfile = false;\r\n \r\n   @override\r\n   void initState() {\r\n     super.initState();\r\n@@ -28,16 +30,22 @@\n       final profile = await _medicalHistoryService.getPatientProfile();\r\n       if (profile != null) {\r\n         setState(() {\r\n           _reports = profile.reports;\r\n-          _reports.sort(\r\n-              (a, b) => b.date.compareTo(a.date)); // Sort by date descending\r\n+          _reports.sort((a, b) => b.date.compareTo(a.date));\r\n           _isLoading = false;\r\n+          _hasProfile = true;\r\n         });\r\n+      } else {\r\n+        setState(() {\r\n+          _isLoading = false;\r\n+          _hasProfile = false;\r\n+        });\r\n       }\r\n     } catch (e) {\r\n       setState(() {\r\n         _isLoading = false;\r\n+        _hasProfile = false;\r\n       });\r\n       if (mounted) {\r\n         ScaffoldMessenger.of(context).showSnackBar(\r\n           SnackBar(content: Text('Error loading reports: $e')),\r\n@@ -122,8 +130,96 @@\n       ),\r\n     );\r\n   }\r\n \r\n+  Widget _buildEmptyState() {\r\n+    if (!_hasProfile) {\r\n+      return Center(\r\n+        child: Column(\r\n+          mainAxisAlignment: MainAxisAlignment.center,\r\n+          children: [\r\n+            const Icon(\r\n+              Icons.person_add,\r\n+              size: 64,\r\n+              color: Colors.grey,\r\n+            ),\r\n+            const SizedBox(height: 16),\r\n+            Text(\r\n+              'No Medical Profile Found',\r\n+              style: GoogleFonts.poppins(\r\n+                fontSize: 18,\r\n+                fontWeight: FontWeight.bold,\r\n+                color: Colors.grey[800],\r\n+              ),\r\n+            ),\r\n+            const SizedBox(height: 8),\r\n+            Text(\r\n+              'Please complete your medical profile to view your history',\r\n+              textAlign: TextAlign.center,\r\n+              style: GoogleFonts.poppins(\r\n+                fontSize: 14,\r\n+                color: Colors.grey[600],\r\n+              ),\r\n+            ),\r\n+            const SizedBox(height: 24),\r\n+            ElevatedButton(\r\n+              onPressed: () {\r\n+                Navigator.push(\r\n+                  context,\r\n+                  MaterialPageRoute(\r\n+                    builder: (context) => const MedicalForm(),\r\n+                  ),\r\n+                );\r\n+              },\r\n+              style: ElevatedButton.styleFrom(\r\n+                backgroundColor: Colors.teal,\r\n+                padding: const EdgeInsets.symmetric(horizontal: 32, vertical: 12),\r\n+              ),\r\n+              child: Text(\r\n+                'Complete Profile',\r\n+                style: GoogleFonts.poppins(\r\n+                  fontSize: 16,\r\n+                  fontWeight: FontWeight.w500,\r\n+                ),\r\n+              ),\r\n+            ),\r\n+          ],\r\n+        ),\r\n+      );\r\n+    }\r\n+\r\n+    return Center(\r\n+      child: Column(\r\n+        mainAxisAlignment: MainAxisAlignment.center,\r\n+        children: [\r\n+          const Icon(\r\n+            Icons.history,\r\n+            size: 64,\r\n+            color: Colors.grey,\r\n+          ),\r\n+          const SizedBox(height: 16),\r\n+          Text(\r\n+            'No Reports Available',\r\n+            style: GoogleFonts.poppins(\r\n+              fontSize: 18,\r\n+              fontWeight: FontWeight.bold,\r\n+              color: Colors.grey[800],\r\n+            ),\r\n+          ),\r\n+          const SizedBox(height: 8),\r\n+          Text(\r\n+            'Your medical history will appear here after your first consultation',\r\n+            textAlign: TextAlign.center,\r\n+            style: GoogleFonts.poppins(\r\n+              fontSize: 14,\r\n+              color: Colors.grey[600],\r\n+            ),\r\n+          ),\r\n+        ],\r\n+      ),\r\n+    );\r\n+  }\r\n+\r\n   @override\r\n   Widget build(BuildContext context) {\r\n     final filteredReports = _getFilteredReports();\r\n \r\n@@ -135,31 +231,12 @@\n       body: _isLoading\r\n           ? const Center(child: CircularProgressIndicator())\r\n           : Column(\r\n               children: [\r\n-                _buildFilterChips(),\r\n+                if (_hasProfile) _buildFilterChips(),\r\n                 Expanded(\r\n                   child: filteredReports.isEmpty\r\n-                      ? Center(\r\n-                          child: Column(\r\n-                            mainAxisAlignment: MainAxisAlignment.center,\r\n-                            children: [\r\n-                              const Icon(\r\n-                                Icons.history,\r\n-                                size: 64,\r\n-                                color: Colors.grey,\r\n-                              ),\r\n-                              const SizedBox(height: 16),\r\n-                              Text(\r\n-                                'No reports available',\r\n-                                style: GoogleFonts.poppins(\r\n-                                  fontSize: 16,\r\n-                                  color: Colors.grey,\r\n-                                ),\r\n-                              ),\r\n-                            ],\r\n-                          ),\r\n-                        )\r\n+                      ? _buildEmptyState()\r\n                       : ListView.builder(\r\n                           padding: const EdgeInsets.all(16),\r\n                           itemCount: filteredReports.length,\r\n                           itemBuilder: (context, index) {\r\n@@ -200,10 +277,10 @@\n                                           ),\r\n                                           const SizedBox(height: 8),\r\n                                           ...report.metadata!.entries.map(\r\n                                             (entry) => Padding(\r\n-                                              padding: const EdgeInsets.only(\r\n-                                                  bottom: 4),\r\n+                                              padding:\r\n+                                                  const EdgeInsets.only(bottom: 4),\r\n                                               child: Text(\r\n                                                 '${entry.key}: ${entry.value}',\r\n                                                 style: GoogleFonts.poppins(),\r\n                                               ),\r\n"
                }
            ],
            "date": 1744617133417,
            "name": "Commit-0",
            "content": "import 'package:flutter/material.dart';\r\nimport 'package:google_fonts/google_fonts.dart';\r\nimport 'package:medi_flow_new/models/patient_profile.dart';\r\nimport 'package:medi_flow_new/services/medical_history_service.dart';\r\n\r\nclass ReportHistory extends StatefulWidget {\r\n  const ReportHistory({super.key});\r\n\r\n  @override\r\n  State<ReportHistory> createState() => _ReportHistoryState();\r\n}\r\n\r\nclass _ReportHistoryState extends State<ReportHistory> {\r\n  final MedicalHistoryService _medicalHistoryService = MedicalHistoryService();\r\n  List<MedicalReport> _reports = [];\r\n  bool _isLoading = true;\r\n\r\n  @override\r\n  void initState() {\r\n    super.initState();\r\n    _loadReports();\r\n  }\r\n\r\n  Future<void> _loadReports() async {\r\n    try {\r\n      final profile = await _medicalHistoryService.getPatientProfile();\r\n      if (profile != null) {\r\n        setState(() {\r\n          _reports = profile.reports;\r\n          _isLoading = false;\r\n        });\r\n      }\r\n    } catch (e) {\r\n      setState(() {\r\n        _isLoading = false;\r\n      });\r\n      if (mounted) {\r\n        ScaffoldMessenger.of(context).showSnackBar(\r\n          SnackBar(content: Text('Error loading reports: $e')),\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return Scaffold(\r\n      appBar: AppBar(\r\n        title: const Text('Report History'),\r\n        backgroundColor: Colors.teal,\r\n      ),\r\n      body: _isLoading\r\n          ? const Center(child: CircularProgressIndicator())\r\n          : _reports.isEmpty\r\n              ? Center(\r\n                  child: Text(\r\n                    'No reports available',\r\n                    style: GoogleFonts.poppins(fontSize: 16),\r\n                  ),\r\n                )\r\n              : ListView.builder(\r\n                  padding: const EdgeInsets.all(16),\r\n                  itemCount: _reports.length,\r\n                  itemBuilder: (context, index) {\r\n                    final report = _reports[index];\r\n                    return Card(\r\n                      margin: const EdgeInsets.only(bottom: 16),\r\n                      child: ExpansionTile(\r\n                        title: Text(\r\n                          'Report ${_reports.length - index}',\r\n                          style: GoogleFonts.poppins(\r\n                            fontWeight: FontWeight.bold,\r\n                          ),\r\n                        ),\r\n                        subtitle: Text(\r\n                          'Date: ${report.date.toString().split(' ')[0]}',\r\n                          style: GoogleFonts.poppins(),\r\n                        ),\r\n                        children: [\r\n                          Padding(\r\n                            padding: const EdgeInsets.all(16),\r\n                            child: Column(\r\n                              crossAxisAlignment: CrossAxisAlignment.start,\r\n                              children: [\r\n                                Text(\r\n                                  'Summary:',\r\n                                  style: GoogleFonts.poppins(\r\n                                    fontWeight: FontWeight.bold,\r\n                                  ),\r\n                                ),\r\n                                const SizedBox(height: 8),\r\n                                Text(\r\n                                  report.content,\r\n                                  style: GoogleFonts.poppins(),\r\n                                ),\r\n                              ],\r\n                            ),\r\n                          ),\r\n                        ],\r\n                      ),\r\n                    );\r\n                  },\r\n                ),\r\n    );\r\n  }\r\n} "
        }
    ]
}