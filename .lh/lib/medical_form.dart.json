{
    "sourceFile": "lib/medical_form.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 6,
            "patches": [
                {
                    "date": 1744489643722,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1744489651315,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -89,9 +89,9 @@\n                   Navigator.pop(context);\r\n                 },\r\n                 child: const Text('Save'),\r\n                 style: ElevatedButton.styleFrom(\r\n-                  primary: Colors.teal,\r\n+                  backgroundColor: Colors.teal,\r\n                 ),\r\n               ),\r\n             ],\r\n           ),\r\n"
                },
                {
                    "date": 1744490404502,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,98 +1,186 @@\n import 'package:flutter/material.dart';\r\n import 'package:shared_preferences/shared_preferences.dart';\r\n \r\n-class HealthProfileForm extends StatefulWidget {\r\n+class MedicalForm extends StatefulWidget {\r\n+  const MedicalForm({super.key});\r\n+\r\n   @override\r\n-  _HealthProfileFormState createState() => _HealthProfileFormState();\r\n+  State<MedicalForm> createState() => _MedicalFormState();\r\n }\r\n \r\n-class _HealthProfileFormState extends State<HealthProfileForm> {\r\n-  final TextEditingController heightController = TextEditingController();\r\n-  final TextEditingController weightController = TextEditingController();\r\n-  final TextEditingController allergiesController = TextEditingController();\r\n-  final TextEditingController medicalHistoryController = TextEditingController();\r\n+class _MedicalFormState extends State<MedicalForm> {\r\n+  final _formKey = GlobalKey<FormState>();\r\n+  final _nameController = TextEditingController();\r\n+  final _ageController = TextEditingController();\r\n+  final _bloodGroupController = TextEditingController();\r\n+  final _heightController = TextEditingController();\r\n+  final _weightController = TextEditingController();\r\n+  final _allergiesController = TextEditingController();\r\n+  final _medicalHistoryController = TextEditingController();\r\n+  final _medicationsController = TextEditingController();\r\n \r\n   @override\r\n-  void initState() {\r\n-    super.initState();\r\n-    _loadMedicalData();\r\n+  void dispose() {\r\n+    _nameController.dispose();\r\n+    _ageController.dispose();\r\n+    _bloodGroupController.dispose();\r\n+    _heightController.dispose();\r\n+    _weightController.dispose();\r\n+    _allergiesController.dispose();\r\n+    _medicalHistoryController.dispose();\r\n+    _medicationsController.dispose();\r\n+    super.dispose();\r\n   }\r\n \r\n-  // Load saved medical details\r\n-  Future<void> _loadMedicalData() async {\r\n-    SharedPreferences prefs = await SharedPreferences.getInstance();\r\n-    setState(() {\r\n-      heightController.text = prefs.getString('height') ?? '';\r\n-      weightController.text = prefs.getString('weight') ?? '';\r\n-      allergiesController.text = prefs.getString('allergies') ?? '';\r\n-      medicalHistoryController.text = prefs.getString('medicalHistory') ?? '';\r\n-    });\r\n-  }\r\n+  Future<void> _saveFormData() async {\r\n+    if (_formKey.currentState!.validate()) {\r\n+      final prefs = await SharedPreferences.getInstance();\r\n+      await prefs.setBool('hasSubmittedForm', true);\r\n+      await prefs.setString('name', _nameController.text);\r\n+      await prefs.setString('age', _ageController.text);\r\n+      await prefs.setString('bloodGroup', _bloodGroupController.text);\r\n+      await prefs.setString('height', _heightController.text);\r\n+      await prefs.setString('weight', _weightController.text);\r\n+      await prefs.setString('allergies', _allergiesController.text);\r\n+      await prefs.setString('medicalHistory', _medicalHistoryController.text);\r\n+      await prefs.setString('medications', _medicationsController.text);\r\n \r\n-  // Save medical details\r\n-  Future<void> _saveMedicalData() async {\r\n-    SharedPreferences prefs = await SharedPreferences.getInstance();\r\n-    prefs.setString('height', heightController.text);\r\n-    prefs.setString('weight', weightController.text);\r\n-    prefs.setString('allergies', allergiesController.text);\r\n-    prefs.setString('medicalHistory', medicalHistoryController.text);\r\n+      if (mounted) {\r\n+        ScaffoldMessenger.of(context).showSnackBar(\r\n+          const SnackBar(\r\n+            content: Text('Medical information saved successfully!'),\r\n+          ),\r\n+        );\r\n+        Navigator.pop(context);\r\n+      }\r\n+    }\r\n   }\r\n \r\n   @override\r\n   Widget build(BuildContext context) {\r\n     return Scaffold(\r\n       appBar: AppBar(\r\n-        title: const Text('Enter Medical Details'),\r\n+        title: const Text('Medical Information Form'),\r\n         backgroundColor: Colors.teal,\r\n       ),\r\n-      body: Padding(\r\n+      body: SingleChildScrollView(\r\n         padding: const EdgeInsets.all(16.0),\r\n-        child: SingleChildScrollView(\r\n+        child: Form(\r\n+          key: _formKey,\r\n           child: Column(\r\n-            crossAxisAlignment: CrossAxisAlignment.start,\r\n+            crossAxisAlignment: CrossAxisAlignment.stretch,\r\n             children: [\r\n-              TextField(\r\n-                controller: heightController,\r\n+              TextFormField(\r\n+                controller: _nameController,\r\n                 decoration: const InputDecoration(\r\n-                  labelText: 'Height',\r\n-                  hintText: 'Enter your height (in cm)',\r\n+                  labelText: 'Full Name',\r\n+                  border: OutlineInputBorder(),\r\n                 ),\r\n+                validator: (value) {\r\n+                  if (value == null || value.isEmpty) {\r\n+                    return 'Please enter your name';\r\n+                  }\r\n+                  return null;\r\n+                },\r\n               ),\r\n               const SizedBox(height: 16),\r\n-              TextField(\r\n-                controller: weightController,\r\n+              TextFormField(\r\n+                controller: _ageController,\r\n                 decoration: const InputDecoration(\r\n-                  labelText: 'Weight',\r\n-                  hintText: 'Enter your weight (in kg)',\r\n+                  labelText: 'Age',\r\n+                  border: OutlineInputBorder(),\r\n                 ),\r\n+                keyboardType: TextInputType.number,\r\n+                validator: (value) {\r\n+                  if (value == null || value.isEmpty) {\r\n+                    return 'Please enter your age';\r\n+                  }\r\n+                  return null;\r\n+                },\r\n               ),\r\n               const SizedBox(height: 16),\r\n-              TextField(\r\n-                controller: allergiesController,\r\n+              TextFormField(\r\n+                controller: _bloodGroupController,\r\n                 decoration: const InputDecoration(\r\n-                  labelText: 'Allergies',\r\n-                  hintText: 'Enter any known allergies',\r\n+                  labelText: 'Blood Group',\r\n+                  border: OutlineInputBorder(),\r\n                 ),\r\n+                validator: (value) {\r\n+                  if (value == null || value.isEmpty) {\r\n+                    return 'Please enter your blood group';\r\n+                  }\r\n+                  return null;\r\n+                },\r\n               ),\r\n               const SizedBox(height: 16),\r\n-              TextField(\r\n-                controller: medicalHistoryController,\r\n+              TextFormField(\r\n+                controller: _heightController,\r\n                 decoration: const InputDecoration(\r\n+                  labelText: 'Height (cm)',\r\n+                  border: OutlineInputBorder(),\r\n+                ),\r\n+                keyboardType: TextInputType.number,\r\n+                validator: (value) {\r\n+                  if (value == null || value.isEmpty) {\r\n+                    return 'Please enter your height';\r\n+                  }\r\n+                  return null;\r\n+                },\r\n+              ),\r\n+              const SizedBox(height: 16),\r\n+              TextFormField(\r\n+                controller: _weightController,\r\n+                decoration: const InputDecoration(\r\n+                  labelText: 'Weight (kg)',\r\n+                  border: OutlineInputBorder(),\r\n+                ),\r\n+                keyboardType: TextInputType.number,\r\n+                validator: (value) {\r\n+                  if (value == null || value.isEmpty) {\r\n+                    return 'Please enter your weight';\r\n+                  }\r\n+                  return null;\r\n+                },\r\n+              ),\r\n+              const SizedBox(height: 16),\r\n+              TextFormField(\r\n+                controller: _allergiesController,\r\n+                decoration: const InputDecoration(\r\n+                  labelText: 'Allergies (if any)',\r\n+                  border: OutlineInputBorder(),\r\n+                ),\r\n+                maxLines: 2,\r\n+              ),\r\n+              const SizedBox(height: 16),\r\n+              TextFormField(\r\n+                controller: _medicalHistoryController,\r\n+                decoration: const InputDecoration(\r\n                   labelText: 'Medical History',\r\n-                  hintText: 'Enter any medical history',\r\n+                  border: OutlineInputBorder(),\r\n                 ),\r\n+                maxLines: 3,\r\n               ),\r\n+              const SizedBox(height: 16),\r\n+              TextFormField(\r\n+                controller: _medicationsController,\r\n+                decoration: const InputDecoration(\r\n+                  labelText: 'Current Medications',\r\n+                  border: OutlineInputBorder(),\r\n+                ),\r\n+                maxLines: 2,\r\n+              ),\r\n               const SizedBox(height: 24),\r\n               ElevatedButton(\r\n-                onPressed: () {\r\n-                  _saveMedicalData();\r\n-                  Navigator.pop(context);\r\n-                },\r\n-                child: const Text('Save'),\r\n+                onPressed: _saveFormData,\r\n                 style: ElevatedButton.styleFrom(\r\n                   backgroundColor: Colors.teal,\r\n+                  padding: const EdgeInsets.symmetric(vertical: 16),\r\n                 ),\r\n+                child: const Text(\r\n+                  'Save Information',\r\n+                  style: TextStyle(fontSize: 16),\r\n+                ),\r\n               ),\r\n             ],\r\n           ),\r\n         ),\r\n"
                },
                {
                    "date": 1744490662582,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,13 @@\n import 'package:flutter/material.dart';\r\n import 'package:shared_preferences/shared_preferences.dart';\r\n+import 'home_dashboard.dart';\r\n \r\n class MedicalForm extends StatefulWidget {\r\n-  const MedicalForm({super.key});\r\n+  final String userName;\r\n \r\n+  const MedicalForm({super.key, required this.userName});\r\n+\r\n   @override\r\n   State<MedicalForm> createState() => _MedicalFormState();\r\n }\r\n \r\n@@ -50,9 +53,14 @@\n           const SnackBar(\r\n             content: Text('Medical information saved successfully!'),\r\n           ),\r\n         );\r\n-        Navigator.pop(context);\r\n+        Navigator.pushReplacement(\r\n+          context,\r\n+          MaterialPageRoute(\r\n+            builder: (context) => HomeDashboard(userName: widget.userName),\r\n+          ),\r\n+        );\r\n       }\r\n     }\r\n   }\r\n \r\n"
                },
                {
                    "date": 1744533692418,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,7 @@\n import 'package:flutter/material.dart';\r\n-import 'package:shared_preferences/shared_preferences.dart';\r\n+import 'package:firebase_auth/firebase_auth.dart';\r\n+import 'package:cloud_firestore/cloud_firestore.dart';\r\n import 'home_dashboard.dart';\r\n \r\n class MedicalForm extends StatefulWidget {\r\n   final String userName;\r\n@@ -36,31 +37,48 @@\n   }\r\n \r\n   Future<void> _saveFormData() async {\r\n     if (_formKey.currentState!.validate()) {\r\n-      final prefs = await SharedPreferences.getInstance();\r\n-      await prefs.setBool('hasSubmittedForm', true);\r\n-      await prefs.setString('name', _nameController.text);\r\n-      await prefs.setString('age', _ageController.text);\r\n-      await prefs.setString('bloodGroup', _bloodGroupController.text);\r\n-      await prefs.setString('height', _heightController.text);\r\n-      await prefs.setString('weight', _weightController.text);\r\n-      await prefs.setString('allergies', _allergiesController.text);\r\n-      await prefs.setString('medicalHistory', _medicalHistoryController.text);\r\n-      await prefs.setString('medications', _medicationsController.text);\r\n+      final user = FirebaseAuth.instance.currentUser;\r\n+      if (user == null) return;\r\n \r\n-      if (mounted) {\r\n-        ScaffoldMessenger.of(context).showSnackBar(\r\n-          const SnackBar(\r\n-            content: Text('Medical information saved successfully!'),\r\n-          ),\r\n-        );\r\n-        Navigator.pushReplacement(\r\n-          context,\r\n-          MaterialPageRoute(\r\n-            builder: (context) => HomeDashboard(userName: widget.userName),\r\n-          ),\r\n-        );\r\n+      try {\r\n+        await FirebaseFirestore.instance\r\n+            .collection('users')\r\n+            .doc(user.uid)\r\n+            .collection('medical_info')\r\n+            .doc('profile')\r\n+            .set({\r\n+          'name': _nameController.text,\r\n+          'age': _ageController.text,\r\n+          'bloodGroup': _bloodGroupController.text,\r\n+          'height': _heightController.text,\r\n+          'weight': _weightController.text,\r\n+          'allergies': _allergiesController.text,\r\n+          'medicalHistory': _medicalHistoryController.text,\r\n+          'medications': _medicationsController.text,\r\n+          'lastUpdated': FieldValue.serverTimestamp(),\r\n+        });\r\n+\r\n+        if (mounted) {\r\n+          ScaffoldMessenger.of(context).showSnackBar(\r\n+            const SnackBar(\r\n+              content: Text('Medical information saved successfully!'),\r\n+            ),\r\n+          );\r\n+          Navigator.pushReplacement(\r\n+            context,\r\n+            MaterialPageRoute(\r\n+              builder: (context) => HomeDashboard(userName: widget.userName),\r\n+            ),\r\n+          );\r\n+        }\r\n+      } catch (e) {\r\n+        if (mounted) {\r\n+          ScaffoldMessenger.of(context).showSnackBar(\r\n+            SnackBar(content: Text('Error saving data: $e')),\r\n+          );\r\n+        }\r\n       }\r\n     }\r\n   }\r\n \r\n"
                },
                {
                    "date": 1744533898070,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,216 +1,198 @@\n-import 'package:flutter/material.dart';\r\n-import 'package:firebase_auth/firebase_auth.dart';\r\n-import 'package:cloud_firestore/cloud_firestore.dart';\r\n-import 'home_dashboard.dart';\r\n-\r\n-class MedicalForm extends StatefulWidget {\r\n-  final String userName;\r\n-\r\n-  const MedicalForm({super.key, required this.userName});\r\n-\r\n-  @override\r\n-  State<MedicalForm> createState() => _MedicalFormState();\r\n-}\r\n-\r\n-class _MedicalFormState extends State<MedicalForm> {\r\n-  final _formKey = GlobalKey<FormState>();\r\n-  final _nameController = TextEditingController();\r\n-  final _ageController = TextEditingController();\r\n-  final _bloodGroupController = TextEditingController();\r\n-  final _heightController = TextEditingController();\r\n-  final _weightController = TextEditingController();\r\n-  final _allergiesController = TextEditingController();\r\n-  final _medicalHistoryController = TextEditingController();\r\n-  final _medicationsController = TextEditingController();\r\n-\r\n-  @override\r\n-  void dispose() {\r\n-    _nameController.dispose();\r\n-    _ageController.dispose();\r\n-    _bloodGroupController.dispose();\r\n-    _heightController.dispose();\r\n-    _weightController.dispose();\r\n-    _allergiesController.dispose();\r\n-    _medicalHistoryController.dispose();\r\n-    _medicationsController.dispose();\r\n-    super.dispose();\r\n-  }\r\n-\r\n-  Future<void> _saveFormData() async {\r\n-    if (_formKey.currentState!.validate()) {\r\n-      final user = FirebaseAuth.instance.currentUser;\r\n-      if (user == null) return;\r\n-\r\n-      try {\r\n-        await FirebaseFirestore.instance\r\n-            .collection('users')\r\n-            .doc(user.uid)\r\n-            .collection('medical_info')\r\n-            .doc('profile')\r\n-            .set({\r\n-              'name': _nameController.text,\r\n-              'age': _ageController.text,\r\n-              'bloodGroup': _bloodGroupController.text,\r\n-              'height': _heightController.text,\r\n-              'weight': _weightController.text,\r\n-              'allergies': _allergiesController.text,\r\n-              'medicalHistory': _medicalHistoryController.text,\r\n-              'medications': _medicationsController.text,\r\n-              'lastUpdated': FieldValue.serverTimestamp(),\r\n-            });\r\n-\r\n-        if (mounted) {\r\n-          ScaffoldMessenger.of(context).showSnackBar(\r\n-            const SnackBar(\r\n-              content: Text('Medical information saved successfully!'),\r\n-            ),\r\n-          );\r\n-          Navigator.pushReplacement(\r\n-            context,\r\n-            MaterialPageRoute(\r\n-              builder: (context) => HomeDashboard(userName: widget.userName),\r\n-            ),\r\n-          );\r\n-        }\r\n-      } catch (e) {\r\n-        if (mounted) {\r\n-          ScaffoldMessenger.of(\r\n-            context,\r\n-          ).showSnackBar(SnackBar(content: Text('Error saving data: $e')));\r\n-        }\r\n-      }\r\n-    }\r\n-  }\r\n-\r\n-  @override\r\n-  Widget build(BuildContext context) {\r\n-    return Scaffold(\r\n-      appBar: AppBar(\r\n-        title: const Text('Medical Information Form'),\r\n-        backgroundColor: Colors.teal,\r\n-      ),\r\n-      body: SingleChildScrollView(\r\n-        padding: const EdgeInsets.all(16.0),\r\n-        child: Form(\r\n-          key: _formKey,\r\n-          child: Column(\r\n-            crossAxisAlignment: CrossAxisAlignment.stretch,\r\n-            children: [\r\n-              TextFormField(\r\n-                controller: _nameController,\r\n-                decoration: const InputDecoration(\r\n-                  labelText: 'Full Name',\r\n-                  border: OutlineInputBorder(),\r\n-                ),\r\n-                validator: (value) {\r\n-                  if (value == null || value.isEmpty) {\r\n-                    return 'Please enter your name';\r\n-                  }\r\n-                  return null;\r\n-                },\r\n-              ),\r\n-              const SizedBox(height: 16),\r\n-              TextFormField(\r\n-                controller: _ageController,\r\n-                decoration: const InputDecoration(\r\n-                  labelText: 'Age',\r\n-                  border: OutlineInputBorder(),\r\n-                ),\r\n-                keyboardType: TextInputType.number,\r\n-                validator: (value) {\r\n-                  if (value == null || value.isEmpty) {\r\n-                    return 'Please enter your age';\r\n-                  }\r\n-                  return null;\r\n-                },\r\n-              ),\r\n-              const SizedBox(height: 16),\r\n-              TextFormField(\r\n-                controller: _bloodGroupController,\r\n-                decoration: const InputDecoration(\r\n-                  labelText: 'Blood Group',\r\n-                  border: OutlineInputBorder(),\r\n-                ),\r\n-                validator: (value) {\r\n-                  if (value == null || value.isEmpty) {\r\n-                    return 'Please enter your blood group';\r\n-                  }\r\n-                  return null;\r\n-                },\r\n-              ),\r\n-              const SizedBox(height: 16),\r\n-              TextFormField(\r\n-                controller: _heightController,\r\n-                decoration: const InputDecoration(\r\n-                  labelText: 'Height (cm)',\r\n-                  border: OutlineInputBorder(),\r\n-                ),\r\n-                keyboardType: TextInputType.number,\r\n-                validator: (value) {\r\n-                  if (value == null || value.isEmpty) {\r\n-                    return 'Please enter your height';\r\n-                  }\r\n-                  return null;\r\n-                },\r\n-              ),\r\n-              const SizedBox(height: 16),\r\n-              TextFormField(\r\n-                controller: _weightController,\r\n-                decoration: const InputDecoration(\r\n-                  labelText: 'Weight (kg)',\r\n-                  border: OutlineInputBorder(),\r\n-                ),\r\n-                keyboardType: TextInputType.number,\r\n-                validator: (value) {\r\n-                  if (value == null || value.isEmpty) {\r\n-                    return 'Please enter your weight';\r\n-                  }\r\n-                  return null;\r\n-                },\r\n-              ),\r\n-              const SizedBox(height: 16),\r\n-              TextFormField(\r\n-                controller: _allergiesController,\r\n-                decoration: const InputDecoration(\r\n-                  labelText: 'Allergies (if any)',\r\n-                  border: OutlineInputBorder(),\r\n-                ),\r\n-                maxLines: 2,\r\n-              ),\r\n-              const SizedBox(height: 16),\r\n-              TextFormField(\r\n-                controller: _medicalHistoryController,\r\n-                decoration: const InputDecoration(\r\n-                  labelText: 'Medical History',\r\n-                  border: OutlineInputBorder(),\r\n-                ),\r\n-                maxLines: 3,\r\n-              ),\r\n-              const SizedBox(height: 16),\r\n-              TextFormField(\r\n-                controller: _medicationsController,\r\n-                decoration: const InputDecoration(\r\n-                  labelText: 'Current Medications',\r\n-                  border: OutlineInputBorder(),\r\n-                ),\r\n-                maxLines: 2,\r\n-              ),\r\n-              const SizedBox(height: 24),\r\n-              ElevatedButton(\r\n-                onPressed: _saveFormData,\r\n-                style: ElevatedButton.styleFrom(\r\n-                  backgroundColor: Colors.teal,\r\n-                  padding: const EdgeInsets.symmetric(vertical: 16),\r\n-                ),\r\n-                child: const Text(\r\n-                  'Save Information',\r\n-                  style: TextStyle(fontSize: 16),\r\n-                ),\r\n-              ),\r\n-            ],\r\n-          ),\r\n-        ),\r\n-      ),\r\n-    );\r\n-  }\r\n-}\r\n+import 'package:flutter/material.dart';\n+import 'package:shared_preferences/shared_preferences.dart';\n+import 'home_dashboard.dart';\n+\n+class MedicalForm extends StatefulWidget {\n+  final String userName;\n+\n+  const MedicalForm({super.key, required this.userName});\n+\n+  @override\n+  State<MedicalForm> createState() => _MedicalFormState();\n+}\n+\n+class _MedicalFormState extends State<MedicalForm> {\n+  final _formKey = GlobalKey<FormState>();\n+  final _nameController = TextEditingController();\n+  final _ageController = TextEditingController();\n+  final _bloodGroupController = TextEditingController();\n+  final _heightController = TextEditingController();\n+  final _weightController = TextEditingController();\n+  final _allergiesController = TextEditingController();\n+  final _medicalHistoryController = TextEditingController();\n+  final _medicationsController = TextEditingController();\n+\n+  @override\n+  void dispose() {\n+    _nameController.dispose();\n+    _ageController.dispose();\n+    _bloodGroupController.dispose();\n+    _heightController.dispose();\n+    _weightController.dispose();\n+    _allergiesController.dispose();\n+    _medicalHistoryController.dispose();\n+    _medicationsController.dispose();\n+    super.dispose();\n+  }\n+\n+  Future<void> _saveFormData() async {\n+    if (_formKey.currentState!.validate()) {\n+      final prefs = await SharedPreferences.getInstance();\n+      await prefs.setBool('hasSubmittedForm', true);\n+      await prefs.setString('name', _nameController.text);\n+      await prefs.setString('age', _ageController.text);\n+      await prefs.setString('bloodGroup', _bloodGroupController.text);\n+      await prefs.setString('height', _heightController.text);\n+      await prefs.setString('weight', _weightController.text);\n+      await prefs.setString('allergies', _allergiesController.text);\n+      await prefs.setString('medicalHistory', _medicalHistoryController.text);\n+      await prefs.setString('medications', _medicationsController.text);\n+\n+      if (mounted) {\n+        ScaffoldMessenger.of(context).showSnackBar(\n+          const SnackBar(\n+            content: Text('Medical information saved successfully!'),\n+          ),\n+        );\n+        Navigator.pushReplacement(\n+          context,\n+          MaterialPageRoute(\n+            builder: (context) => HomeDashboard(userName: widget.userName),\n+          ),\n+        );\n+      }\n+    }\n+  }\n+\n+  @override\n+  Widget build(BuildContext context) {\n+    return Scaffold(\n+      appBar: AppBar(\n+        title: const Text('Medical Information Form'),\n+        backgroundColor: Colors.teal,\n+      ),\n+      body: SingleChildScrollView(\n+        padding: const EdgeInsets.all(16.0),\n+        child: Form(\n+          key: _formKey,\n+          child: Column(\n+            crossAxisAlignment: CrossAxisAlignment.stretch,\n+            children: [\n+              TextFormField(\n+                controller: _nameController,\n+                decoration: const InputDecoration(\n+                  labelText: 'Full Name',\n+                  border: OutlineInputBorder(),\n+                ),\n+                validator: (value) {\n+                  if (value == null || value.isEmpty) {\n+                    return 'Please enter your name';\n+                  }\n+                  return null;\n+                },\n+              ),\n+              const SizedBox(height: 16),\n+              TextFormField(\n+                controller: _ageController,\n+                decoration: const InputDecoration(\n+                  labelText: 'Age',\n+                  border: OutlineInputBorder(),\n+                ),\n+                keyboardType: TextInputType.number,\n+                validator: (value) {\n+                  if (value == null || value.isEmpty) {\n+                    return 'Please enter your age';\n+                  }\n+                  return null;\n+                },\n+              ),\n+              const SizedBox(height: 16),\n+              TextFormField(\n+                controller: _bloodGroupController,\n+                decoration: const InputDecoration(\n+                  labelText: 'Blood Group',\n+                  border: OutlineInputBorder(),\n+                ),\n+                validator: (value) {\n+                  if (value == null || value.isEmpty) {\n+                    return 'Please enter your blood group';\n+                  }\n+                  return null;\n+                },\n+              ),\n+              const SizedBox(height: 16),\n+              TextFormField(\n+                controller: _heightController,\n+                decoration: const InputDecoration(\n+                  labelText: 'Height (cm)',\n+                  border: OutlineInputBorder(),\n+                ),\n+                keyboardType: TextInputType.number,\n+                validator: (value) {\n+                  if (value == null || value.isEmpty) {\n+                    return 'Please enter your height';\n+                  }\n+                  return null;\n+                },\n+              ),\n+              const SizedBox(height: 16),\n+              TextFormField(\n+                controller: _weightController,\n+                decoration: const InputDecoration(\n+                  labelText: 'Weight (kg)',\n+                  border: OutlineInputBorder(),\n+                ),\n+                keyboardType: TextInputType.number,\n+                validator: (value) {\n+                  if (value == null || value.isEmpty) {\n+                    return 'Please enter your weight';\n+                  }\n+                  return null;\n+                },\n+              ),\n+              const SizedBox(height: 16),\n+              TextFormField(\n+                controller: _allergiesController,\n+                decoration: const InputDecoration(\n+                  labelText: 'Allergies (if any)',\n+                  border: OutlineInputBorder(),\n+                ),\n+                maxLines: 2,\n+              ),\n+              const SizedBox(height: 16),\n+              TextFormField(\n+                controller: _medicalHistoryController,\n+                decoration: const InputDecoration(\n+                  labelText: 'Medical History',\n+                  border: OutlineInputBorder(),\n+                ),\n+                maxLines: 3,\n+              ),\n+              const SizedBox(height: 16),\n+              TextFormField(\n+                controller: _medicationsController,\n+                decoration: const InputDecoration(\n+                  labelText: 'Current Medications',\n+                  border: OutlineInputBorder(),\n+                ),\n+                maxLines: 2,\n+              ),\n+              const SizedBox(height: 24),\n+              ElevatedButton(\n+                onPressed: _saveFormData,\n+                style: ElevatedButton.styleFrom(\n+                  backgroundColor: Colors.teal,\n+                  padding: const EdgeInsets.symmetric(vertical: 16),\n+                ),\n+                child: const Text(\n+                  'Save Information',\n+                  style: TextStyle(fontSize: 16),\n+                ),\n+              ),\n+            ],\n+          ),\n+        ),\n+      ),\n+    );\n+  }\n+}\n"
                },
                {
                    "date": 1744621287929,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,9 +56,9 @@\n         );\n         Navigator.pushReplacement(\n           context,\n           MaterialPageRoute(\n-            builder: (context) => HomeDashboard(userName: widget.userName, userRole: '',),\n+            builder: (context) => HomeDashboard(userName: widget.userName),\n           ),\n         );\n       }\n     }\n"
                }
            ],
            "date": 1744489643722,
            "name": "Commit-0",
            "content": "import 'package:flutter/material.dart';\r\nimport 'package:shared_preferences/shared_preferences.dart';\r\n\r\nclass HealthProfileForm extends StatefulWidget {\r\n  @override\r\n  _HealthProfileFormState createState() => _HealthProfileFormState();\r\n}\r\n\r\nclass _HealthProfileFormState extends State<HealthProfileForm> {\r\n  final TextEditingController heightController = TextEditingController();\r\n  final TextEditingController weightController = TextEditingController();\r\n  final TextEditingController allergiesController = TextEditingController();\r\n  final TextEditingController medicalHistoryController = TextEditingController();\r\n\r\n  @override\r\n  void initState() {\r\n    super.initState();\r\n    _loadMedicalData();\r\n  }\r\n\r\n  // Load saved medical details\r\n  Future<void> _loadMedicalData() async {\r\n    SharedPreferences prefs = await SharedPreferences.getInstance();\r\n    setState(() {\r\n      heightController.text = prefs.getString('height') ?? '';\r\n      weightController.text = prefs.getString('weight') ?? '';\r\n      allergiesController.text = prefs.getString('allergies') ?? '';\r\n      medicalHistoryController.text = prefs.getString('medicalHistory') ?? '';\r\n    });\r\n  }\r\n\r\n  // Save medical details\r\n  Future<void> _saveMedicalData() async {\r\n    SharedPreferences prefs = await SharedPreferences.getInstance();\r\n    prefs.setString('height', heightController.text);\r\n    prefs.setString('weight', weightController.text);\r\n    prefs.setString('allergies', allergiesController.text);\r\n    prefs.setString('medicalHistory', medicalHistoryController.text);\r\n  }\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return Scaffold(\r\n      appBar: AppBar(\r\n        title: const Text('Enter Medical Details'),\r\n        backgroundColor: Colors.teal,\r\n      ),\r\n      body: Padding(\r\n        padding: const EdgeInsets.all(16.0),\r\n        child: SingleChildScrollView(\r\n          child: Column(\r\n            crossAxisAlignment: CrossAxisAlignment.start,\r\n            children: [\r\n              TextField(\r\n                controller: heightController,\r\n                decoration: const InputDecoration(\r\n                  labelText: 'Height',\r\n                  hintText: 'Enter your height (in cm)',\r\n                ),\r\n              ),\r\n              const SizedBox(height: 16),\r\n              TextField(\r\n                controller: weightController,\r\n                decoration: const InputDecoration(\r\n                  labelText: 'Weight',\r\n                  hintText: 'Enter your weight (in kg)',\r\n                ),\r\n              ),\r\n              const SizedBox(height: 16),\r\n              TextField(\r\n                controller: allergiesController,\r\n                decoration: const InputDecoration(\r\n                  labelText: 'Allergies',\r\n                  hintText: 'Enter any known allergies',\r\n                ),\r\n              ),\r\n              const SizedBox(height: 16),\r\n              TextField(\r\n                controller: medicalHistoryController,\r\n                decoration: const InputDecoration(\r\n                  labelText: 'Medical History',\r\n                  hintText: 'Enter any medical history',\r\n                ),\r\n              ),\r\n              const SizedBox(height: 24),\r\n              ElevatedButton(\r\n                onPressed: () {\r\n                  _saveMedicalData();\r\n                  Navigator.pop(context);\r\n                },\r\n                child: const Text('Save'),\r\n                style: ElevatedButton.styleFrom(\r\n                  primary: Colors.teal,\r\n                ),\r\n              ),\r\n            ],\r\n          ),\r\n        ),\r\n      ),\r\n    );\r\n  }\r\n}\r\n"
        }
    ]
}