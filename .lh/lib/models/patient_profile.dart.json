{
    "sourceFile": "lib/models/patient_profile.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1744547897941,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1744617160830,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n-import 'package:cloud_firestore/cloud_firestore.dart';\r\n \r\n+\r\n class PatientProfile {\r\n   final String id;\r\n   final String userId;\r\n   final String firstName;\r\n@@ -49,16 +49,20 @@\n       dateOfBirth: (data['dateOfBirth'] as Timestamp).toDate(),\r\n       gender: data['gender'] ?? '',\r\n       doctorId: data['doctorId'],\r\n       conditions: List<String>.from(data['conditions'] ?? []),\r\n-      medications: (data['medications'] as List?)\r\n-          ?.map((m) => Medication.fromMap(m))\r\n-          .toList() ?? [],\r\n+      medications:\r\n+          (data['medications'] as List?)\r\n+              ?.map((m) => Medication.fromMap(m))\r\n+              .toList() ??\r\n+          [],\r\n       allergies: List<String>.from(data['allergies'] ?? []),\r\n       healthStats: data['healthStats'],\r\n-      reports: (data['reports'] as List?)\r\n-          ?.map((r) => MedicalReport.fromMap(r))\r\n-          .toList() ?? [],\r\n+      reports:\r\n+          (data['reports'] as List?)\r\n+              ?.map((r) => MedicalReport.fromMap(r))\r\n+              .toList() ??\r\n+          [],\r\n       createdAt: (data['createdAt'] as Timestamp).toDate(),\r\n       updatedAt: (data['updatedAt'] as Timestamp).toDate(),\r\n     );\r\n   }\r\n@@ -157,5 +161,5 @@\n       'doctorId': doctorId,\r\n       'metadata': metadata,\r\n     };\r\n   }\r\n-} \n\\ No newline at end of file\n+}\r\n"
                },
                {
                    "date": 1744617205965,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n+import 'package:cloud_firestore/cloud_firestore.dart';\r\n \r\n-\r\n class PatientProfile {\r\n   final String id;\r\n   final String userId;\r\n   final String firstName;\r\n@@ -37,35 +37,35 @@\n     required this.updatedAt,\r\n   });\r\n \r\n   factory PatientProfile.fromFirestore(DocumentSnapshot doc) {\r\n-    Map<String, dynamic> data = doc.data() as Map<String, dynamic>;\r\n-    return PatientProfile(\r\n-      id: doc.id,\r\n-      userId: data['userId'] ?? '',\r\n-      firstName: data['firstName'] ?? '',\r\n-      lastName: data['lastName'] ?? '',\r\n-      email: data['email'] ?? '',\r\n-      phone: data['phone'],\r\n-      dateOfBirth: (data['dateOfBirth'] as Timestamp).toDate(),\r\n-      gender: data['gender'] ?? '',\r\n-      doctorId: data['doctorId'],\r\n-      conditions: List<String>.from(data['conditions'] ?? []),\r\n-      medications:\r\n-          (data['medications'] as List?)\r\n-              ?.map((m) => Medication.fromMap(m))\r\n-              .toList() ??\r\n-          [],\r\n-      allergies: List<String>.from(data['allergies'] ?? []),\r\n-      healthStats: data['healthStats'],\r\n-      reports:\r\n-          (data['reports'] as List?)\r\n-              ?.map((r) => MedicalReport.fromMap(r))\r\n-              .toList() ??\r\n-          [],\r\n-      createdAt: (data['createdAt'] as Timestamp).toDate(),\r\n-      updatedAt: (data['updatedAt'] as Timestamp).toDate(),\r\n-    );\r\n+    try {\r\n+      Map<String, dynamic> data = doc.data() as Map<String, dynamic>;\r\n+      return PatientProfile(\r\n+        id: doc.id,\r\n+        userId: data['userId']?.toString() ?? '',\r\n+        firstName: data['firstName']?.toString() ?? '',\r\n+        lastName: data['lastName']?.toString() ?? '',\r\n+        email: data['email']?.toString() ?? '',\r\n+        phone: data['phone']?.toString(),\r\n+        dateOfBirth: (data['dateOfBirth'] as Timestamp?)?.toDate() ?? DateTime.now(),\r\n+        gender: data['gender']?.toString() ?? '',\r\n+        doctorId: data['doctorId']?.toString(),\r\n+        conditions: List<String>.from(data['conditions'] ?? []),\r\n+        medications: (data['medications'] as List<dynamic>?)\r\n+            ?.map((m) => Medication.fromMap(m as Map<String, dynamic>))\r\n+            .toList() ?? [],\r\n+        allergies: List<String>.from(data['allergies'] ?? []),\r\n+        healthStats: data['healthStats'] as Map<String, dynamic>?,\r\n+        reports: (data['reports'] as List<dynamic>?)\r\n+            ?.map((r) => MedicalReport.fromMap(r as Map<String, dynamic>))\r\n+            .toList() ?? [],\r\n+        createdAt: (data['createdAt'] as Timestamp?)?.toDate() ?? DateTime.now(),\r\n+        updatedAt: (data['updatedAt'] as Timestamp?)?.toDate() ?? DateTime.now(),\r\n+      );\r\n+    } catch (e) {\r\n+      throw Exception('Error parsing patient profile: $e');\r\n+    }\r\n   }\r\n \r\n   Map<String, dynamic> toMap() {\r\n     return {\r\n@@ -103,15 +103,19 @@\n     this.notes,\r\n   });\r\n \r\n   factory Medication.fromMap(Map<String, dynamic> map) {\r\n-    return Medication(\r\n-      name: map['name'] ?? '',\r\n-      dosage: map['dosage'] ?? '',\r\n-      frequency: map['frequency'] ?? '',\r\n-      startDate: (map['startDate'] as Timestamp).toDate(),\r\n-      notes: map['notes'],\r\n-    );\r\n+    try {\r\n+      return Medication(\r\n+        name: map['name']?.toString() ?? '',\r\n+        dosage: map['dosage']?.toString() ?? '',\r\n+        frequency: map['frequency']?.toString() ?? '',\r\n+        startDate: (map['startDate'] as Timestamp?)?.toDate() ?? DateTime.now(),\r\n+        notes: map['notes']?.toString(),\r\n+      );\r\n+    } catch (e) {\r\n+      throw Exception('Error parsing medication: $e');\r\n+    }\r\n   }\r\n \r\n   Map<String, dynamic> toMap() {\r\n     return {\r\n@@ -141,16 +145,20 @@\n     this.metadata,\r\n   });\r\n \r\n   factory MedicalReport.fromMap(Map<String, dynamic> map) {\r\n-    return MedicalReport(\r\n-      id: map['id'] ?? '',\r\n-      type: map['type'] ?? '',\r\n-      content: map['content'] ?? '',\r\n-      date: (map['date'] as Timestamp).toDate(),\r\n-      doctorId: map['doctorId'],\r\n-      metadata: map['metadata'],\r\n-    );\r\n+    try {\r\n+      return MedicalReport(\r\n+        id: map['id']?.toString() ?? DateTime.now().millisecondsSinceEpoch.toString(),\r\n+        type: map['type']?.toString() ?? '',\r\n+        content: map['content']?.toString() ?? '',\r\n+        date: (map['date'] as Timestamp?)?.toDate() ?? DateTime.now(),\r\n+        doctorId: map['doctorId']?.toString(),\r\n+        metadata: map['metadata'] as Map<String, dynamic>?,\r\n+      );\r\n+    } catch (e) {\r\n+      throw Exception('Error parsing medical report: $e');\r\n+    }\r\n   }\r\n \r\n   Map<String, dynamic> toMap() {\r\n     return {\r\n"
                },
                {
                    "date": 1744619640138,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,9 +60,9 @@\n         allergies: List<String>.from(data['allergies'] ?? []),\r\n         healthStats: data['healthStats'] as Map<String, dynamic>?,\r\n         reports:\r\n             (data['reports'] as List<dynamic>?)\r\n-                ?.map((r) => MedicalReport.fromMap(r as Map<String, dynamic>))\r\n+                ?.map((r) => MedicalReport.fromFirestore(r as DocumentSnapshot))\r\n                 .toList() ??\r\n             [],\r\n         createdAt:\r\n             (data['createdAt'] as Timestamp?)?.toDate() ?? DateTime.now(),\r\n@@ -151,14 +151,28 @@\n     this.doctorId,\r\n     this.metadata,\r\n   });\r\n \r\n+  factory MedicalReport.fromFirestore(DocumentSnapshot doc) {\r\n+    try {\r\n+      Map<String, dynamic> data = doc.data() as Map<String, dynamic>;\r\n+      return MedicalReport(\r\n+        id: doc.id,\r\n+        type: data['type']?.toString() ?? '',\r\n+        content: data['content']?.toString() ?? '',\r\n+        date: (data['date'] as Timestamp?)?.toDate() ?? DateTime.now(),\r\n+        doctorId: data['doctorId']?.toString(),\r\n+        metadata: data['metadata'] as Map<String, dynamic>?,\r\n+      );\r\n+    } catch (e) {\r\n+      throw Exception('Error parsing medical report from Firestore: $e');\r\n+    }\r\n+  }\r\n+\r\n   factory MedicalReport.fromMap(Map<String, dynamic> map) {\r\n     try {\r\n       return MedicalReport(\r\n-        id:\r\n-            map['id']?.toString() ??\r\n-            DateTime.now().millisecondsSinceEpoch.toString(),\r\n+        id: map['id']?.toString() ?? DateTime.now().millisecondsSinceEpoch.toString(),\r\n         type: map['type']?.toString() ?? '',\r\n         content: map['content']?.toString() ?? '',\r\n         date: (map['date'] as Timestamp?)?.toDate() ?? DateTime.now(),\r\n         doctorId: map['doctorId']?.toString(),\r\n"
                }
            ],
            "date": 1744547897941,
            "name": "Commit-0",
            "content": "import 'package:cloud_firestore/cloud_firestore.dart';\r\n\r\nclass PatientProfile {\r\n  final String id;\r\n  final String userId;\r\n  final String firstName;\r\n  final String lastName;\r\n  final String email;\r\n  final String? phone;\r\n  final DateTime dateOfBirth;\r\n  final String gender;\r\n  final String? doctorId;\r\n  final List<String> conditions;\r\n  final List<Medication> medications;\r\n  final List<String> allergies;\r\n  final Map<String, dynamic>? healthStats;\r\n  final List<MedicalReport> reports;\r\n  final DateTime createdAt;\r\n  final DateTime updatedAt;\r\n\r\n  PatientProfile({\r\n    required this.id,\r\n    required this.userId,\r\n    required this.firstName,\r\n    required this.lastName,\r\n    required this.email,\r\n    this.phone,\r\n    required this.dateOfBirth,\r\n    required this.gender,\r\n    this.doctorId,\r\n    required this.conditions,\r\n    required this.medications,\r\n    required this.allergies,\r\n    this.healthStats,\r\n    required this.reports,\r\n    required this.createdAt,\r\n    required this.updatedAt,\r\n  });\r\n\r\n  factory PatientProfile.fromFirestore(DocumentSnapshot doc) {\r\n    Map<String, dynamic> data = doc.data() as Map<String, dynamic>;\r\n    return PatientProfile(\r\n      id: doc.id,\r\n      userId: data['userId'] ?? '',\r\n      firstName: data['firstName'] ?? '',\r\n      lastName: data['lastName'] ?? '',\r\n      email: data['email'] ?? '',\r\n      phone: data['phone'],\r\n      dateOfBirth: (data['dateOfBirth'] as Timestamp).toDate(),\r\n      gender: data['gender'] ?? '',\r\n      doctorId: data['doctorId'],\r\n      conditions: List<String>.from(data['conditions'] ?? []),\r\n      medications: (data['medications'] as List?)\r\n          ?.map((m) => Medication.fromMap(m))\r\n          .toList() ?? [],\r\n      allergies: List<String>.from(data['allergies'] ?? []),\r\n      healthStats: data['healthStats'],\r\n      reports: (data['reports'] as List?)\r\n          ?.map((r) => MedicalReport.fromMap(r))\r\n          .toList() ?? [],\r\n      createdAt: (data['createdAt'] as Timestamp).toDate(),\r\n      updatedAt: (data['updatedAt'] as Timestamp).toDate(),\r\n    );\r\n  }\r\n\r\n  Map<String, dynamic> toMap() {\r\n    return {\r\n      'userId': userId,\r\n      'firstName': firstName,\r\n      'lastName': lastName,\r\n      'email': email,\r\n      'phone': phone,\r\n      'dateOfBirth': Timestamp.fromDate(dateOfBirth),\r\n      'gender': gender,\r\n      'doctorId': doctorId,\r\n      'conditions': conditions,\r\n      'medications': medications.map((m) => m.toMap()).toList(),\r\n      'allergies': allergies,\r\n      'healthStats': healthStats,\r\n      'reports': reports.map((r) => r.toMap()).toList(),\r\n      'createdAt': Timestamp.fromDate(createdAt),\r\n      'updatedAt': Timestamp.fromDate(updatedAt),\r\n    };\r\n  }\r\n}\r\n\r\nclass Medication {\r\n  final String name;\r\n  final String dosage;\r\n  final String frequency;\r\n  final DateTime startDate;\r\n  final String? notes;\r\n\r\n  Medication({\r\n    required this.name,\r\n    required this.dosage,\r\n    required this.frequency,\r\n    required this.startDate,\r\n    this.notes,\r\n  });\r\n\r\n  factory Medication.fromMap(Map<String, dynamic> map) {\r\n    return Medication(\r\n      name: map['name'] ?? '',\r\n      dosage: map['dosage'] ?? '',\r\n      frequency: map['frequency'] ?? '',\r\n      startDate: (map['startDate'] as Timestamp).toDate(),\r\n      notes: map['notes'],\r\n    );\r\n  }\r\n\r\n  Map<String, dynamic> toMap() {\r\n    return {\r\n      'name': name,\r\n      'dosage': dosage,\r\n      'frequency': frequency,\r\n      'startDate': Timestamp.fromDate(startDate),\r\n      'notes': notes,\r\n    };\r\n  }\r\n}\r\n\r\nclass MedicalReport {\r\n  final String id;\r\n  final String type;\r\n  final String content;\r\n  final DateTime date;\r\n  final String? doctorId;\r\n  final Map<String, dynamic>? metadata;\r\n\r\n  MedicalReport({\r\n    required this.id,\r\n    required this.type,\r\n    required this.content,\r\n    required this.date,\r\n    this.doctorId,\r\n    this.metadata,\r\n  });\r\n\r\n  factory MedicalReport.fromMap(Map<String, dynamic> map) {\r\n    return MedicalReport(\r\n      id: map['id'] ?? '',\r\n      type: map['type'] ?? '',\r\n      content: map['content'] ?? '',\r\n      date: (map['date'] as Timestamp).toDate(),\r\n      doctorId: map['doctorId'],\r\n      metadata: map['metadata'],\r\n    );\r\n  }\r\n\r\n  Map<String, dynamic> toMap() {\r\n    return {\r\n      'id': id,\r\n      'type': type,\r\n      'content': content,\r\n      'date': Timestamp.fromDate(date),\r\n      'doctorId': doctorId,\r\n      'metadata': metadata,\r\n    };\r\n  }\r\n} "
        }
    ]
}