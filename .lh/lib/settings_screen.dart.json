{
    "sourceFile": "lib/settings_screen.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 7,
            "patches": [
                {
                    "date": 1744620130669,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1744620163999,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n       await FirebaseAuth.instance.signOut();\r\n       if (context.mounted) {\r\n         Navigator.pushAndRemoveUntil(\r\n           context,\r\n-          MaterialPageRoute(builder: (context) => const LoginPage()),\r\n+          MaterialPageRoute(builder: (context) => LoginPage()),\r\n           (route) => false,\r\n         );\r\n       }\r\n     } catch (e) {\r\n@@ -208,5 +208,5 @@\n       trailing: const Icon(Icons.chevron_right),\r\n       onTap: onTap,\r\n     );\r\n   }\r\n-} \n\\ No newline at end of file\n+}\r\n"
                },
                {
                    "date": 1744620602563,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,8 +30,9 @@\n     return Scaffold(\r\n       appBar: AppBar(\r\n         title: const Text('Settings'),\r\n         backgroundColor: Colors.teal,\r\n+        elevation: 0,\r\n       ),\r\n       body: ListView(\r\n         padding: const EdgeInsets.all(16),\r\n         children: [\r\n"
                },
                {
                    "date": 1744623109922,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,213 +1,1 @@\n-import 'package:flutter/material.dart';\r\n-import 'package:google_fonts/google_fonts.dart';\r\n-import 'package:firebase_auth/firebase_auth.dart';\r\n-import 'package:medi_flow_new/login.dart';\r\n-\r\n-class SettingsScreen extends StatelessWidget {\r\n-  const SettingsScreen({super.key});\r\n-\r\n-  Future<void> _logout(BuildContext context) async {\r\n-    try {\r\n-      await FirebaseAuth.instance.signOut();\r\n-      if (context.mounted) {\r\n-        Navigator.pushAndRemoveUntil(\r\n-          context,\r\n-          MaterialPageRoute(builder: (context) => LoginPage()),\r\n-          (route) => false,\r\n-        );\r\n-      }\r\n-    } catch (e) {\r\n-      if (context.mounted) {\r\n-        ScaffoldMessenger.of(context).showSnackBar(\r\n-          SnackBar(content: Text('Error logging out: $e')),\r\n-        );\r\n-      }\r\n-    }\r\n-  }\r\n-\r\n-  @override\r\n-  Widget build(BuildContext context) {\r\n-    return Scaffold(\r\n-      appBar: AppBar(\r\n-        title: const Text('Settings'),\r\n-        backgroundColor: Colors.teal,\r\n-        elevation: 0,\r\n-      ),\r\n-      body: ListView(\r\n-        padding: const EdgeInsets.all(16),\r\n-        children: [\r\n-          // Account Settings Section\r\n-          _buildSection(\r\n-            title: 'Account Settings',\r\n-            children: [\r\n-              _buildSettingTile(\r\n-                icon: Icons.person_outline,\r\n-                title: 'Personal Information',\r\n-                subtitle: 'Update your personal details',\r\n-                onTap: () {\r\n-                  // TODO: Navigate to personal info screen\r\n-                },\r\n-              ),\r\n-              _buildSettingTile(\r\n-                icon: Icons.notifications_outlined,\r\n-                title: 'Notifications',\r\n-                subtitle: 'Manage your notification preferences',\r\n-                onTap: () {\r\n-                  // TODO: Navigate to notifications settings\r\n-                },\r\n-              ),\r\n-              _buildSettingTile(\r\n-                icon: Icons.lock_outline,\r\n-                title: 'Privacy & Security',\r\n-                subtitle: 'Manage your privacy settings',\r\n-                onTap: () {\r\n-                  // TODO: Navigate to privacy settings\r\n-                },\r\n-              ),\r\n-            ],\r\n-          ),\r\n-          const SizedBox(height: 24),\r\n-\r\n-          // App Settings Section\r\n-          _buildSection(\r\n-            title: 'App Settings',\r\n-            children: [\r\n-              _buildSettingTile(\r\n-                icon: Icons.language,\r\n-                title: 'Language',\r\n-                subtitle: 'English',\r\n-                onTap: () {\r\n-                  // TODO: Show language selection\r\n-                },\r\n-              ),\r\n-              _buildSettingTile(\r\n-                icon: Icons.dark_mode_outlined,\r\n-                title: 'Theme',\r\n-                subtitle: 'Light',\r\n-                onTap: () {\r\n-                  // TODO: Show theme selection\r\n-                },\r\n-              ),\r\n-              _buildSettingTile(\r\n-                icon: Icons.help_outline,\r\n-                title: 'Help & Support',\r\n-                subtitle: 'Get help with the app',\r\n-                onTap: () {\r\n-                  // TODO: Navigate to help screen\r\n-                },\r\n-              ),\r\n-            ],\r\n-          ),\r\n-          const SizedBox(height: 24),\r\n-\r\n-          // Medical Settings Section\r\n-          _buildSection(\r\n-            title: 'Medical Settings',\r\n-            children: [\r\n-              _buildSettingTile(\r\n-                icon: Icons.medical_services_outlined,\r\n-                title: 'Health Records',\r\n-                subtitle: 'Manage your health records',\r\n-                onTap: () {\r\n-                  // TODO: Navigate to health records\r\n-                },\r\n-              ),\r\n-              _buildSettingTile(\r\n-                icon: Icons.local_hospital_outlined,\r\n-                title: 'Connected Hospitals',\r\n-                subtitle: 'Manage hospital connections',\r\n-                onTap: () {\r\n-                  // TODO: Navigate to hospital connections\r\n-                },\r\n-              ),\r\n-              _buildSettingTile(\r\n-                icon: Icons.emergency_outlined,\r\n-                title: 'Emergency Contacts',\r\n-                subtitle: 'Manage emergency contacts',\r\n-                onTap: () {\r\n-                  // TODO: Navigate to emergency contacts\r\n-                },\r\n-              ),\r\n-            ],\r\n-          ),\r\n-          const SizedBox(height: 24),\r\n-\r\n-          // Logout Button\r\n-          Padding(\r\n-            padding: const EdgeInsets.symmetric(horizontal: 16),\r\n-            child: ElevatedButton(\r\n-              onPressed: () => _logout(context),\r\n-              style: ElevatedButton.styleFrom(\r\n-                backgroundColor: Colors.red,\r\n-                padding: const EdgeInsets.symmetric(vertical: 16),\r\n-                shape: RoundedRectangleBorder(\r\n-                  borderRadius: BorderRadius.circular(12),\r\n-                ),\r\n-              ),\r\n-              child: const Text(\r\n-                'Logout',\r\n-                style: TextStyle(\r\n-                  fontSize: 16,\r\n-                  fontWeight: FontWeight.bold,\r\n-                  color: Colors.white,\r\n-                ),\r\n-              ),\r\n-            ),\r\n-          ),\r\n-        ],\r\n-      ),\r\n-    );\r\n-  }\r\n-\r\n-  Widget _buildSection({\r\n-    required String title,\r\n-    required List<Widget> children,\r\n-  }) {\r\n-    return Column(\r\n-      crossAxisAlignment: CrossAxisAlignment.start,\r\n-      children: [\r\n-        Text(\r\n-          title,\r\n-          style: GoogleFonts.poppins(\r\n-            fontSize: 18,\r\n-            fontWeight: FontWeight.bold,\r\n-            color: Colors.teal,\r\n-          ),\r\n-        ),\r\n-        const SizedBox(height: 8),\r\n-        Card(\r\n-          child: Column(\r\n-            children: children,\r\n-          ),\r\n-        ),\r\n-      ],\r\n-    );\r\n-  }\r\n-\r\n-  Widget _buildSettingTile({\r\n-    required IconData icon,\r\n-    required String title,\r\n-    required String subtitle,\r\n-    required VoidCallback onTap,\r\n-  }) {\r\n-    return ListTile(\r\n-      leading: Icon(icon, color: Colors.teal),\r\n-      title: Text(\r\n-        title,\r\n-        style: GoogleFonts.poppins(\r\n-          fontSize: 16,\r\n-          fontWeight: FontWeight.w500,\r\n-        ),\r\n-      ),\r\n-      subtitle: Text(\r\n-        subtitle,\r\n-        style: GoogleFonts.poppins(\r\n-          fontSize: 14,\r\n-          color: Colors.grey[600],\r\n-        ),\r\n-      ),\r\n-      trailing: const Icon(Icons.chevron_right),\r\n-      onTap: onTap,\r\n-    );\r\n-  }\r\n-}\r\n+ \n\\ No newline at end of file\n"
                },
                {
                    "date": 1744624066719,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,1 +1,160 @@\n- \n\\ No newline at end of file\n+import 'package:flutter/material.dart';\r\n+import 'package:medi_flow_new/auth_service.dart';\r\n+import 'package:medi_flow_new/login.dart';\r\n+\r\n+class SettingsScreen extends StatelessWidget {\r\n+  const SettingsScreen({super.key});\r\n+\r\n+  @override\r\n+  Widget build(BuildContext context) {\r\n+    return Scaffold(\r\n+      appBar: AppBar(\r\n+        title: const Text('Settings'),\r\n+        backgroundColor: Colors.teal,\r\n+      ),\r\n+      body: ListView(\r\n+        padding: const EdgeInsets.all(16),\r\n+        children: [\r\n+          // Account Settings Section\r\n+          const Text(\r\n+            'Account Settings',\r\n+            style: TextStyle(\r\n+              fontSize: 18,\r\n+              fontWeight: FontWeight.bold,\r\n+            ),\r\n+          ),\r\n+          const SizedBox(height: 16),\r\n+          _SettingsTile(\r\n+            icon: Icons.person_outline,\r\n+            title: 'Profile Information',\r\n+            onTap: () {\r\n+              // TODO: Navigate to profile edit screen\r\n+            },\r\n+          ),\r\n+          _SettingsTile(\r\n+            icon: Icons.notifications_outlined,\r\n+            title: 'Notifications',\r\n+            onTap: () {\r\n+              // TODO: Navigate to notification settings\r\n+            },\r\n+          ),\r\n+          _SettingsTile(\r\n+            icon: Icons.security_outlined,\r\n+            title: 'Privacy & Security',\r\n+            onTap: () {\r\n+              // TODO: Navigate to privacy settings\r\n+            },\r\n+          ),\r\n+\r\n+          const SizedBox(height: 24),\r\n+\r\n+          // App Settings Section\r\n+          const Text(\r\n+            'App Settings',\r\n+            style: TextStyle(\r\n+              fontSize: 18,\r\n+              fontWeight: FontWeight.bold,\r\n+            ),\r\n+          ),\r\n+          const SizedBox(height: 16),\r\n+          _SettingsTile(\r\n+            icon: Icons.language_outlined,\r\n+            title: 'Language',\r\n+            onTap: () {\r\n+              // TODO: Navigate to language settings\r\n+            },\r\n+          ),\r\n+          _SettingsTile(\r\n+            icon: Icons.dark_mode_outlined,\r\n+            title: 'Dark Mode',\r\n+            onTap: () {\r\n+              // TODO: Toggle dark mode\r\n+            },\r\n+          ),\r\n+\r\n+          const SizedBox(height: 24),\r\n+\r\n+          // Support Section\r\n+          const Text(\r\n+            'Support',\r\n+            style: TextStyle(\r\n+              fontSize: 18,\r\n+              fontWeight: FontWeight.bold,\r\n+            ),\r\n+          ),\r\n+          const SizedBox(height: 16),\r\n+          _SettingsTile(\r\n+            icon: Icons.help_outline,\r\n+            title: 'Help & Support',\r\n+            onTap: () {\r\n+              // TODO: Navigate to help center\r\n+            },\r\n+          ),\r\n+          _SettingsTile(\r\n+            icon: Icons.info_outline,\r\n+            title: 'About',\r\n+            onTap: () {\r\n+              // TODO: Show about dialog\r\n+            },\r\n+          ),\r\n+\r\n+          const SizedBox(height: 32),\r\n+\r\n+          // Logout Button\r\n+          ElevatedButton(\r\n+            onPressed: () async {\r\n+              final authService = AuthService();\r\n+              await authService.signOut();\r\n+              if (context.mounted) {\r\n+                Navigator.of(context).pushAndRemoveUntil(\r\n+                  MaterialPageRoute(builder: (context) => const LoginScreen()),\r\n+                  (route) => false,\r\n+                );\r\n+              }\r\n+            },\r\n+            style: ElevatedButton.styleFrom(\r\n+              backgroundColor: Colors.red,\r\n+              padding: const EdgeInsets.symmetric(vertical: 16),\r\n+              shape: RoundedRectangleBorder(\r\n+                borderRadius: BorderRadius.circular(12),\r\n+              ),\r\n+            ),\r\n+            child: const Text(\r\n+              'Logout',\r\n+              style: TextStyle(\r\n+                fontSize: 16,\r\n+                fontWeight: FontWeight.bold,\r\n+                color: Colors.white,\r\n+              ),\r\n+            ),\r\n+          ),\r\n+        ],\r\n+      ),\r\n+    );\r\n+  }\r\n+}\r\n+\r\n+class _SettingsTile extends StatelessWidget {\r\n+  final IconData icon;\r\n+  final String title;\r\n+  final VoidCallback onTap;\r\n+\r\n+  const _SettingsTile({\r\n+    required this.icon,\r\n+    required this.title,\r\n+    required this.onTap,\r\n+  });\r\n+\r\n+  @override\r\n+  Widget build(BuildContext context) {\r\n+    return Card(\r\n+      margin: const EdgeInsets.only(bottom: 8),\r\n+      child: ListTile(\r\n+        leading: Icon(icon, color: Colors.teal),\r\n+        title: Text(title),\r\n+        trailing: const Icon(Icons.chevron_right),\r\n+        onTap: onTap,\r\n+      ),\r\n+    );\r\n+  }\r\n+} \n\\ No newline at end of file\n"
                },
                {
                    "date": 1744624157566,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,8 @@\n import 'package:flutter/material.dart';\r\n import 'package:medi_flow_new/auth_service.dart';\r\n import 'package:medi_flow_new/login.dart';\r\n+import 'package:medi_flow_new/profile_screen.dart';\r\n \r\n class SettingsScreen extends StatelessWidget {\r\n   const SettingsScreen({super.key});\r\n \r\n@@ -156,5 +157,5 @@\n         onTap: onTap,\r\n       ),\r\n     );\r\n   }\r\n-} \n\\ No newline at end of file\n+}\r\n"
                },
                {
                    "date": 1744633922074,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,166 +1,290 @@\n import 'package:flutter/material.dart';\r\n+import 'package:google_fonts/google_fonts.dart';\r\n+import 'package:firebase_auth/firebase_auth.dart';\r\n import 'package:medi_flow_new/auth_service.dart';\r\n import 'package:medi_flow_new/login.dart';\r\n-import 'package:medi_flow_new/profile_screen.dart';\r\n \r\n-class SettingsScreen extends StatelessWidget {\r\n+class SettingsScreen extends StatefulWidget {\r\n   const SettingsScreen({super.key});\r\n \r\n   @override\r\n+  State<SettingsScreen> createState() => _SettingsScreenState();\r\n+}\r\n+\r\n+class _SettingsScreenState extends State<SettingsScreen> {\r\n+  final _authService = AuthService();\r\n+  bool _notificationsEnabled = true;\r\n+  bool _darkModeEnabled = false;\r\n+  String _language = 'English';\r\n+\r\n+  @override\r\n   Widget build(BuildContext context) {\r\n     return Scaffold(\r\n+      backgroundColor: const Color(0xFFF8F9FA),\r\n       appBar: AppBar(\r\n-        title: const Text('Settings'),\r\n-        backgroundColor: Colors.teal,\r\n+        title: Text(\r\n+          'Settings',\r\n+          style: GoogleFonts.poppins(\r\n+            fontSize: 20,\r\n+            fontWeight: FontWeight.w600,\r\n+            color: Colors.black87,\r\n+          ),\r\n+        ),\r\n+        backgroundColor: Colors.white,\r\n+        elevation: 0,\r\n       ),\r\n-      body: ListView(\r\n-        padding: const EdgeInsets.all(16),\r\n-        children: [\r\n-          // Account Settings Section\r\n-          const Text(\r\n-            'Account Settings',\r\n-            style: TextStyle(\r\n-              fontSize: 18,\r\n-              fontWeight: FontWeight.bold,\r\n+      body: SingleChildScrollView(\r\n+        padding: const EdgeInsets.all(20),\r\n+        child: Column(\r\n+          crossAxisAlignment: CrossAxisAlignment.start,\r\n+          children: [\r\n+            // Account Section\r\n+            Text(\r\n+              'Account',\r\n+              style: GoogleFonts.poppins(\r\n+                fontSize: 16,\r\n+                fontWeight: FontWeight.w600,\r\n+                color: Colors.black54,\r\n+              ),\r\n             ),\r\n-          ),\r\n-          const SizedBox(height: 16),\r\n-          _SettingsTile(\r\n-            icon: Icons.person_outline,\r\n-            title: 'Profile Information',\r\n-            onTap: () {\r\n-              Navigator.push(\r\n-                context,\r\n-                MaterialPageRoute(\r\n-                  builder: (context) => const ProfileScreen(),\r\n+            const SizedBox(height: 12),\r\n+            _buildSectionCard(\r\n+              children: [\r\n+                _buildSettingsItem(\r\n+                  icon: Icons.person_outline,\r\n+                  title: 'Profile',\r\n+                  subtitle: 'Manage your personal information',\r\n+                  onTap: () {\r\n+                    // Navigate to profile edit screen\r\n+                  },\r\n                 ),\r\n-              );\r\n-            },\r\n-          ),\r\n-          _SettingsTile(\r\n-            icon: Icons.notifications_outlined,\r\n-            title: 'Notifications',\r\n-            onTap: () {\r\n-              // TODO: Navigate to notification settings\r\n-            },\r\n-          ),\r\n-          _SettingsTile(\r\n-            icon: Icons.security_outlined,\r\n-            title: 'Privacy & Security',\r\n-            onTap: () {\r\n-              // TODO: Navigate to privacy settings\r\n-            },\r\n-          ),\r\n-\r\n-          const SizedBox(height: 24),\r\n-\r\n-          // App Settings Section\r\n-          const Text(\r\n-            'App Settings',\r\n-            style: TextStyle(\r\n-              fontSize: 18,\r\n-              fontWeight: FontWeight.bold,\r\n+                _buildDivider(),\r\n+                _buildSettingsItem(\r\n+                  icon: Icons.security_outlined,\r\n+                  title: 'Security',\r\n+                  subtitle: 'Password and security settings',\r\n+                  onTap: () {\r\n+                    // Navigate to security settings\r\n+                  },\r\n+                ),\r\n+              ],\r\n             ),\r\n-          ),\r\n-          const SizedBox(height: 16),\r\n-          _SettingsTile(\r\n-            icon: Icons.language_outlined,\r\n-            title: 'Language',\r\n-            onTap: () {\r\n-              // TODO: Navigate to language settings\r\n-            },\r\n-          ),\r\n-          _SettingsTile(\r\n-            icon: Icons.dark_mode_outlined,\r\n-            title: 'Dark Mode',\r\n-            onTap: () {\r\n-              // TODO: Toggle dark mode\r\n-            },\r\n-          ),\r\n+            const SizedBox(height: 24),\r\n \r\n-          const SizedBox(height: 24),\r\n-\r\n-          // Support Section\r\n-          const Text(\r\n-            'Support',\r\n-            style: TextStyle(\r\n-              fontSize: 18,\r\n-              fontWeight: FontWeight.bold,\r\n+            // Preferences Section\r\n+            Text(\r\n+              'Preferences',\r\n+              style: GoogleFonts.poppins(\r\n+                fontSize: 16,\r\n+                fontWeight: FontWeight.w600,\r\n+                color: Colors.black54,\r\n+              ),\r\n             ),\r\n-          ),\r\n-          const SizedBox(height: 16),\r\n-          _SettingsTile(\r\n-            icon: Icons.help_outline,\r\n-            title: 'Help & Support',\r\n-            onTap: () {\r\n-              // TODO: Navigate to help center\r\n-            },\r\n-          ),\r\n-          _SettingsTile(\r\n-            icon: Icons.info_outline,\r\n-            title: 'About',\r\n-            onTap: () {\r\n-              // TODO: Show about dialog\r\n-            },\r\n-          ),\r\n+            const SizedBox(height: 12),\r\n+            _buildSectionCard(\r\n+              children: [\r\n+                _buildSettingsItem(\r\n+                  icon: Icons.notifications_outlined,\r\n+                  title: 'Notifications',\r\n+                  subtitle: 'Manage your notification preferences',\r\n+                  trailing: Switch(\r\n+                    value: _notificationsEnabled,\r\n+                    onChanged: (value) {\r\n+                      setState(() => _notificationsEnabled = value);\r\n+                    },\r\n+                    activeColor: const Color(0xFF2D9CDB),\r\n+                  ),\r\n+                ),\r\n+                _buildDivider(),\r\n+                _buildSettingsItem(\r\n+                  icon: Icons.dark_mode_outlined,\r\n+                  title: 'Dark Mode',\r\n+                  subtitle: 'Switch between light and dark theme',\r\n+                  trailing: Switch(\r\n+                    value: _darkModeEnabled,\r\n+                    onChanged: (value) {\r\n+                      setState(() => _darkModeEnabled = value);\r\n+                    },\r\n+                    activeColor: const Color(0xFF2D9CDB),\r\n+                  ),\r\n+                ),\r\n+                _buildDivider(),\r\n+                _buildSettingsItem(\r\n+                  icon: Icons.language_outlined,\r\n+                  title: 'Language',\r\n+                  subtitle: 'Change app language',\r\n+                  trailing: DropdownButton<String>(\r\n+                    value: _language,\r\n+                    underline: const SizedBox(),\r\n+                    items: ['English', 'Spanish', 'French', 'German']\r\n+                        .map((String value) {\r\n+                      return DropdownMenuItem<String>(\r\n+                        value: value,\r\n+                        child: Text(\r\n+                          value,\r\n+                          style: GoogleFonts.poppins(\r\n+                            fontSize: 14,\r\n+                            color: Colors.black87,\r\n+                          ),\r\n+                        ),\r\n+                      );\r\n+                    }).toList(),\r\n+                    onChanged: (String? newValue) {\r\n+                      if (newValue != null) {\r\n+                        setState(() => _language = newValue);\r\n+                      }\r\n+                    },\r\n+                  ),\r\n+                ),\r\n+              ],\r\n+            ),\r\n+            const SizedBox(height: 24),\r\n \r\n-          const SizedBox(height: 32),\r\n-\r\n-          // Logout Button\r\n-          ElevatedButton(\r\n-            onPressed: () async {\r\n-              final authService = AuthService();\r\n-              await authService.signOut();\r\n-              if (context.mounted) {\r\n-                Navigator.of(context).pushAndRemoveUntil(\r\n-                  MaterialPageRoute(builder: (context) => const LoginScreen()),\r\n-                  (route) => false,\r\n-                );\r\n-              }\r\n-            },\r\n-            style: ElevatedButton.styleFrom(\r\n-              backgroundColor: Colors.red,\r\n-              padding: const EdgeInsets.symmetric(vertical: 16),\r\n-              shape: RoundedRectangleBorder(\r\n-                borderRadius: BorderRadius.circular(12),\r\n+            // Support Section\r\n+            Text(\r\n+              'Support',\r\n+              style: GoogleFonts.poppins(\r\n+                fontSize: 16,\r\n+                fontWeight: FontWeight.w600,\r\n+                color: Colors.black54,\r\n               ),\r\n             ),\r\n-            child: const Text(\r\n-              'Logout',\r\n-              style: TextStyle(\r\n-                fontSize: 16,\r\n-                fontWeight: FontWeight.bold,\r\n-                color: Colors.white,\r\n+            const SizedBox(height: 12),\r\n+            _buildSectionCard(\r\n+              children: [\r\n+                _buildSettingsItem(\r\n+                  icon: Icons.help_outline,\r\n+                  title: 'Help Center',\r\n+                  subtitle: 'Get help with using the app',\r\n+                  onTap: () {\r\n+                    // Navigate to help center\r\n+                  },\r\n+                ),\r\n+                _buildDivider(),\r\n+                _buildSettingsItem(\r\n+                  icon: Icons.feedback_outlined,\r\n+                  title: 'Send Feedback',\r\n+                  subtitle: 'Help us improve the app',\r\n+                  onTap: () {\r\n+                    // Navigate to feedback form\r\n+                  },\r\n+                ),\r\n+                _buildDivider(),\r\n+                _buildSettingsItem(\r\n+                  icon: Icons.info_outline,\r\n+                  title: 'About',\r\n+                  subtitle: 'App version and information',\r\n+                  onTap: () {\r\n+                    // Show about dialog\r\n+                  },\r\n+                ),\r\n+              ],\r\n+            ),\r\n+            const SizedBox(height: 24),\r\n+\r\n+            // Sign Out Button\r\n+            SizedBox(\r\n+              width: double.infinity,\r\n+              child: ElevatedButton(\r\n+                onPressed: _signOut,\r\n+                style: ElevatedButton.styleFrom(\r\n+                  backgroundColor: Colors.white,\r\n+                  foregroundColor: Colors.red,\r\n+                  padding: const EdgeInsets.symmetric(vertical: 16),\r\n+                  shape: RoundedRectangleBorder(\r\n+                    borderRadius: BorderRadius.circular(12),\r\n+                    side: const BorderSide(color: Colors.red),\r\n+                  ),\r\n+                ),\r\n+                child: Text(\r\n+                  'Sign Out',\r\n+                  style: GoogleFonts.poppins(\r\n+                    fontSize: 16,\r\n+                    fontWeight: FontWeight.w600,\r\n+                  ),\r\n+                ),\r\n               ),\r\n             ),\r\n+          ],\r\n+        ),\r\n+      ),\r\n+    );\r\n+  }\r\n+\r\n+  Widget _buildSectionCard({required List<Widget> children}) {\r\n+    return Container(\r\n+      decoration: BoxDecoration(\r\n+        color: Colors.white,\r\n+        borderRadius: BorderRadius.circular(16),\r\n+        boxShadow: [\r\n+          BoxShadow(\r\n+            color: Colors.black.withOpacity(0.05),\r\n+            blurRadius: 10,\r\n+            offset: const Offset(0, 4),\r\n           ),\r\n         ],\r\n       ),\r\n+      child: Column(\r\n+        children: children,\r\n+      ),\r\n     );\r\n   }\r\n-}\r\n \r\n-class _SettingsTile extends StatelessWidget {\r\n-  final IconData icon;\r\n-  final String title;\r\n-  final VoidCallback onTap;\r\n-\r\n-  const _SettingsTile({\r\n-    required this.icon,\r\n-    required this.title,\r\n-    required this.onTap,\r\n-  });\r\n-\r\n-  @override\r\n-  Widget build(BuildContext context) {\r\n-    return Card(\r\n-      margin: const EdgeInsets.only(bottom: 8),\r\n-      child: ListTile(\r\n-        leading: Icon(icon, color: Colors.teal),\r\n-        title: Text(title),\r\n-        trailing: const Icon(Icons.chevron_right),\r\n-        onTap: onTap,\r\n+  Widget _buildSettingsItem({\r\n+    required IconData icon,\r\n+    required String title,\r\n+    required String subtitle,\r\n+    Widget? trailing,\r\n+    VoidCallback? onTap,\r\n+  }) {\r\n+    return ListTile(\r\n+      leading: Icon(\r\n+        icon,\r\n+        color: const Color(0xFF2D9CDB),\r\n+        size: 24,\r\n       ),\r\n+      title: Text(\r\n+        title,\r\n+        style: GoogleFonts.poppins(\r\n+          fontSize: 16,\r\n+          fontWeight: FontWeight.w600,\r\n+          color: Colors.black87,\r\n+        ),\r\n+      ),\r\n+      subtitle: Text(\r\n+        subtitle,\r\n+        style: GoogleFonts.poppins(\r\n+          fontSize: 14,\r\n+          color: Colors.black54,\r\n+        ),\r\n+      ),\r\n+      trailing: trailing,\r\n+      onTap: onTap,\r\n     );\r\n   }\r\n+\r\n+  Widget _buildDivider() {\r\n+    return const Divider(\r\n+      height: 1,\r\n+      thickness: 1,\r\n+      color: Color(0xFFF0F0F0),\r\n+    );\r\n+  }\r\n+\r\n+  Future<void> _signOut() async {\r\n+    try {\r\n+      await _authService.signOut();\r\n+      if (mounted) {\r\n+        Navigator.of(context).pushReplacement(\r\n+          MaterialPageRoute(builder: (context) => const LoginScreen()),\r\n+        );\r\n+      }\r\n+    } catch (e) {\r\n+      if (mounted) {\r\n+        ScaffoldMessenger.of(context).showSnackBar(\r\n+          SnackBar(content: Text('Error signing out: $e')),\r\n+        );\r\n+      }\r\n+    }\r\n+  }\r\n }\r\n"
                },
                {
                    "date": 1744634002227,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,8 +2,9 @@\n import 'package:google_fonts/google_fonts.dart';\r\n import 'package:firebase_auth/firebase_auth.dart';\r\n import 'package:medi_flow_new/auth_service.dart';\r\n import 'package:medi_flow_new/login.dart';\r\n+import 'package:shared_preferences/shared_preferences.dart';\r\n \r\n class SettingsScreen extends StatefulWidget {\r\n   const SettingsScreen({super.key});\r\n \r\n@@ -15,23 +16,52 @@\n   final _authService = AuthService();\r\n   bool _notificationsEnabled = true;\r\n   bool _darkModeEnabled = false;\r\n   String _language = 'English';\r\n+  late SharedPreferences _prefs;\r\n \r\n   @override\r\n+  void initState() {\r\n+    super.initState();\r\n+    _loadPreferences();\r\n+  }\r\n+\r\n+  Future<void> _loadPreferences() async {\r\n+    _prefs = await SharedPreferences.getInstance();\r\n+    setState(() {\r\n+      _darkModeEnabled = _prefs.getBool('darkMode') ?? false;\r\n+      _notificationsEnabled = _prefs.getBool('notifications') ?? true;\r\n+      _language = _prefs.getString('language') ?? 'English';\r\n+    });\r\n+  }\r\n+\r\n+  Future<void> _toggleDarkMode(bool value) async {\r\n+    setState(() => _darkModeEnabled = value);\r\n+    await _prefs.setBool('darkMode', value);\r\n+    // Notify the app to rebuild with new theme\r\n+    if (mounted) {\r\n+      Navigator.of(context).pushReplacement(\r\n+        MaterialPageRoute(builder: (context) => const SettingsScreen()),\r\n+      );\r\n+    }\r\n+  }\r\n+\r\n+  @override\r\n   Widget build(BuildContext context) {\r\n+    final isDarkMode = Theme.of(context).brightness == Brightness.dark;\r\n+    \r\n     return Scaffold(\r\n-      backgroundColor: const Color(0xFFF8F9FA),\r\n+      backgroundColor: isDarkMode ? const Color(0xFF121212) : const Color(0xFFF8F9FA),\r\n       appBar: AppBar(\r\n         title: Text(\r\n           'Settings',\r\n           style: GoogleFonts.poppins(\r\n             fontSize: 20,\r\n             fontWeight: FontWeight.w600,\r\n-            color: Colors.black87,\r\n+            color: isDarkMode ? Colors.white : Colors.black87,\r\n           ),\r\n         ),\r\n-        backgroundColor: Colors.white,\r\n+        backgroundColor: isDarkMode ? const Color(0xFF1E1E1E) : Colors.white,\r\n         elevation: 0,\r\n       ),\r\n       body: SingleChildScrollView(\r\n         padding: const EdgeInsets.all(20),\r\n@@ -43,24 +73,27 @@\n               'Account',\r\n               style: GoogleFonts.poppins(\r\n                 fontSize: 16,\r\n                 fontWeight: FontWeight.w600,\r\n-                color: Colors.black54,\r\n+                color: isDarkMode ? Colors.white70 : Colors.black54,\r\n               ),\r\n             ),\r\n             const SizedBox(height: 12),\r\n             _buildSectionCard(\r\n+              isDarkMode: isDarkMode,\r\n               children: [\r\n                 _buildSettingsItem(\r\n+                  isDarkMode: isDarkMode,\r\n                   icon: Icons.person_outline,\r\n                   title: 'Profile',\r\n                   subtitle: 'Manage your personal information',\r\n                   onTap: () {\r\n                     // Navigate to profile edit screen\r\n                   },\r\n                 ),\r\n-                _buildDivider(),\r\n+                _buildDivider(isDarkMode),\r\n                 _buildSettingsItem(\r\n+                  isDarkMode: isDarkMode,\r\n                   icon: Icons.security_outlined,\r\n                   title: 'Security',\r\n                   subtitle: 'Password and security settings',\r\n                   onTap: () {\r\n@@ -76,41 +109,44 @@\n               'Preferences',\r\n               style: GoogleFonts.poppins(\r\n                 fontSize: 16,\r\n                 fontWeight: FontWeight.w600,\r\n-                color: Colors.black54,\r\n+                color: isDarkMode ? Colors.white70 : Colors.black54,\r\n               ),\r\n             ),\r\n             const SizedBox(height: 12),\r\n             _buildSectionCard(\r\n+              isDarkMode: isDarkMode,\r\n               children: [\r\n                 _buildSettingsItem(\r\n+                  isDarkMode: isDarkMode,\r\n                   icon: Icons.notifications_outlined,\r\n                   title: 'Notifications',\r\n                   subtitle: 'Manage your notification preferences',\r\n                   trailing: Switch(\r\n                     value: _notificationsEnabled,\r\n                     onChanged: (value) {\r\n                       setState(() => _notificationsEnabled = value);\r\n+                      _prefs.setBool('notifications', value);\r\n                     },\r\n                     activeColor: const Color(0xFF2D9CDB),\r\n                   ),\r\n                 ),\r\n-                _buildDivider(),\r\n+                _buildDivider(isDarkMode),\r\n                 _buildSettingsItem(\r\n+                  isDarkMode: isDarkMode,\r\n                   icon: Icons.dark_mode_outlined,\r\n                   title: 'Dark Mode',\r\n                   subtitle: 'Switch between light and dark theme',\r\n                   trailing: Switch(\r\n                     value: _darkModeEnabled,\r\n-                    onChanged: (value) {\r\n-                      setState(() => _darkModeEnabled = value);\r\n-                    },\r\n+                    onChanged: _toggleDarkMode,\r\n                     activeColor: const Color(0xFF2D9CDB),\r\n                   ),\r\n                 ),\r\n-                _buildDivider(),\r\n+                _buildDivider(isDarkMode),\r\n                 _buildSettingsItem(\r\n+                  isDarkMode: isDarkMode,\r\n                   icon: Icons.language_outlined,\r\n                   title: 'Language',\r\n                   subtitle: 'Change app language',\r\n                   trailing: DropdownButton<String>(\r\n@@ -123,16 +159,17 @@\n                         child: Text(\r\n                           value,\r\n                           style: GoogleFonts.poppins(\r\n                             fontSize: 14,\r\n-                            color: Colors.black87,\r\n+                            color: isDarkMode ? Colors.white : Colors.black87,\r\n                           ),\r\n                         ),\r\n                       );\r\n                     }).toList(),\r\n                     onChanged: (String? newValue) {\r\n                       if (newValue != null) {\r\n                         setState(() => _language = newValue);\r\n+                        _prefs.setString('language', newValue);\r\n                       }\r\n                     },\r\n                   ),\r\n                 ),\r\n@@ -145,33 +182,37 @@\n               'Support',\r\n               style: GoogleFonts.poppins(\r\n                 fontSize: 16,\r\n                 fontWeight: FontWeight.w600,\r\n-                color: Colors.black54,\r\n+                color: isDarkMode ? Colors.white70 : Colors.black54,\r\n               ),\r\n             ),\r\n             const SizedBox(height: 12),\r\n             _buildSectionCard(\r\n+              isDarkMode: isDarkMode,\r\n               children: [\r\n                 _buildSettingsItem(\r\n+                  isDarkMode: isDarkMode,\r\n                   icon: Icons.help_outline,\r\n                   title: 'Help Center',\r\n                   subtitle: 'Get help with using the app',\r\n                   onTap: () {\r\n                     // Navigate to help center\r\n                   },\r\n                 ),\r\n-                _buildDivider(),\r\n+                _buildDivider(isDarkMode),\r\n                 _buildSettingsItem(\r\n+                  isDarkMode: isDarkMode,\r\n                   icon: Icons.feedback_outlined,\r\n                   title: 'Send Feedback',\r\n                   subtitle: 'Help us improve the app',\r\n                   onTap: () {\r\n                     // Navigate to feedback form\r\n                   },\r\n                 ),\r\n-                _buildDivider(),\r\n+                _buildDivider(isDarkMode),\r\n                 _buildSettingsItem(\r\n+                  isDarkMode: isDarkMode,\r\n                   icon: Icons.info_outline,\r\n                   title: 'About',\r\n                   subtitle: 'App version and information',\r\n                   onTap: () {\r\n@@ -187,9 +228,9 @@\n               width: double.infinity,\r\n               child: ElevatedButton(\r\n                 onPressed: _signOut,\r\n                 style: ElevatedButton.styleFrom(\r\n-                  backgroundColor: Colors.white,\r\n+                  backgroundColor: isDarkMode ? const Color(0xFF1E1E1E) : Colors.white,\r\n                   foregroundColor: Colors.red,\r\n                   padding: const EdgeInsets.symmetric(vertical: 16),\r\n                   shape: RoundedRectangleBorder(\r\n                     borderRadius: BorderRadius.circular(12),\r\n@@ -210,12 +251,15 @@\n       ),\r\n     );\r\n   }\r\n \r\n-  Widget _buildSectionCard({required List<Widget> children}) {\r\n+  Widget _buildSectionCard({\r\n+    required List<Widget> children,\r\n+    required bool isDarkMode,\r\n+  }) {\r\n     return Container(\r\n       decoration: BoxDecoration(\r\n-        color: Colors.white,\r\n+        color: isDarkMode ? const Color(0xFF1E1E1E) : Colors.white,\r\n         borderRadius: BorderRadius.circular(16),\r\n         boxShadow: [\r\n           BoxShadow(\r\n             color: Colors.black.withOpacity(0.05),\r\n@@ -230,8 +274,9 @@\n     );\r\n   }\r\n \r\n   Widget _buildSettingsItem({\r\n+    required bool isDarkMode,\r\n     required IconData icon,\r\n     required String title,\r\n     required String subtitle,\r\n     Widget? trailing,\r\n@@ -247,28 +292,28 @@\n         title,\r\n         style: GoogleFonts.poppins(\r\n           fontSize: 16,\r\n           fontWeight: FontWeight.w600,\r\n-          color: Colors.black87,\r\n+          color: isDarkMode ? Colors.white : Colors.black87,\r\n         ),\r\n       ),\r\n       subtitle: Text(\r\n         subtitle,\r\n         style: GoogleFonts.poppins(\r\n           fontSize: 14,\r\n-          color: Colors.black54,\r\n+          color: isDarkMode ? Colors.white70 : Colors.black54,\r\n         ),\r\n       ),\r\n       trailing: trailing,\r\n       onTap: onTap,\r\n     );\r\n   }\r\n \r\n-  Widget _buildDivider() {\r\n-    return const Divider(\r\n+  Widget _buildDivider(bool isDarkMode) {\r\n+    return Divider(\r\n       height: 1,\r\n       thickness: 1,\r\n-      color: Color(0xFFF0F0F0),\r\n+      color: isDarkMode ? const Color(0xFF2A2A2A) : const Color(0xFFF0F0F0),\r\n     );\r\n   }\r\n \r\n   Future<void> _signOut() async {\r\n"
                }
            ],
            "date": 1744620130669,
            "name": "Commit-0",
            "content": "import 'package:flutter/material.dart';\r\nimport 'package:google_fonts/google_fonts.dart';\r\nimport 'package:firebase_auth/firebase_auth.dart';\r\nimport 'package:medi_flow_new/login.dart';\r\n\r\nclass SettingsScreen extends StatelessWidget {\r\n  const SettingsScreen({super.key});\r\n\r\n  Future<void> _logout(BuildContext context) async {\r\n    try {\r\n      await FirebaseAuth.instance.signOut();\r\n      if (context.mounted) {\r\n        Navigator.pushAndRemoveUntil(\r\n          context,\r\n          MaterialPageRoute(builder: (context) => const LoginPage()),\r\n          (route) => false,\r\n        );\r\n      }\r\n    } catch (e) {\r\n      if (context.mounted) {\r\n        ScaffoldMessenger.of(context).showSnackBar(\r\n          SnackBar(content: Text('Error logging out: $e')),\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return Scaffold(\r\n      appBar: AppBar(\r\n        title: const Text('Settings'),\r\n        backgroundColor: Colors.teal,\r\n      ),\r\n      body: ListView(\r\n        padding: const EdgeInsets.all(16),\r\n        children: [\r\n          // Account Settings Section\r\n          _buildSection(\r\n            title: 'Account Settings',\r\n            children: [\r\n              _buildSettingTile(\r\n                icon: Icons.person_outline,\r\n                title: 'Personal Information',\r\n                subtitle: 'Update your personal details',\r\n                onTap: () {\r\n                  // TODO: Navigate to personal info screen\r\n                },\r\n              ),\r\n              _buildSettingTile(\r\n                icon: Icons.notifications_outlined,\r\n                title: 'Notifications',\r\n                subtitle: 'Manage your notification preferences',\r\n                onTap: () {\r\n                  // TODO: Navigate to notifications settings\r\n                },\r\n              ),\r\n              _buildSettingTile(\r\n                icon: Icons.lock_outline,\r\n                title: 'Privacy & Security',\r\n                subtitle: 'Manage your privacy settings',\r\n                onTap: () {\r\n                  // TODO: Navigate to privacy settings\r\n                },\r\n              ),\r\n            ],\r\n          ),\r\n          const SizedBox(height: 24),\r\n\r\n          // App Settings Section\r\n          _buildSection(\r\n            title: 'App Settings',\r\n            children: [\r\n              _buildSettingTile(\r\n                icon: Icons.language,\r\n                title: 'Language',\r\n                subtitle: 'English',\r\n                onTap: () {\r\n                  // TODO: Show language selection\r\n                },\r\n              ),\r\n              _buildSettingTile(\r\n                icon: Icons.dark_mode_outlined,\r\n                title: 'Theme',\r\n                subtitle: 'Light',\r\n                onTap: () {\r\n                  // TODO: Show theme selection\r\n                },\r\n              ),\r\n              _buildSettingTile(\r\n                icon: Icons.help_outline,\r\n                title: 'Help & Support',\r\n                subtitle: 'Get help with the app',\r\n                onTap: () {\r\n                  // TODO: Navigate to help screen\r\n                },\r\n              ),\r\n            ],\r\n          ),\r\n          const SizedBox(height: 24),\r\n\r\n          // Medical Settings Section\r\n          _buildSection(\r\n            title: 'Medical Settings',\r\n            children: [\r\n              _buildSettingTile(\r\n                icon: Icons.medical_services_outlined,\r\n                title: 'Health Records',\r\n                subtitle: 'Manage your health records',\r\n                onTap: () {\r\n                  // TODO: Navigate to health records\r\n                },\r\n              ),\r\n              _buildSettingTile(\r\n                icon: Icons.local_hospital_outlined,\r\n                title: 'Connected Hospitals',\r\n                subtitle: 'Manage hospital connections',\r\n                onTap: () {\r\n                  // TODO: Navigate to hospital connections\r\n                },\r\n              ),\r\n              _buildSettingTile(\r\n                icon: Icons.emergency_outlined,\r\n                title: 'Emergency Contacts',\r\n                subtitle: 'Manage emergency contacts',\r\n                onTap: () {\r\n                  // TODO: Navigate to emergency contacts\r\n                },\r\n              ),\r\n            ],\r\n          ),\r\n          const SizedBox(height: 24),\r\n\r\n          // Logout Button\r\n          Padding(\r\n            padding: const EdgeInsets.symmetric(horizontal: 16),\r\n            child: ElevatedButton(\r\n              onPressed: () => _logout(context),\r\n              style: ElevatedButton.styleFrom(\r\n                backgroundColor: Colors.red,\r\n                padding: const EdgeInsets.symmetric(vertical: 16),\r\n                shape: RoundedRectangleBorder(\r\n                  borderRadius: BorderRadius.circular(12),\r\n                ),\r\n              ),\r\n              child: const Text(\r\n                'Logout',\r\n                style: TextStyle(\r\n                  fontSize: 16,\r\n                  fontWeight: FontWeight.bold,\r\n                  color: Colors.white,\r\n                ),\r\n              ),\r\n            ),\r\n          ),\r\n        ],\r\n      ),\r\n    );\r\n  }\r\n\r\n  Widget _buildSection({\r\n    required String title,\r\n    required List<Widget> children,\r\n  }) {\r\n    return Column(\r\n      crossAxisAlignment: CrossAxisAlignment.start,\r\n      children: [\r\n        Text(\r\n          title,\r\n          style: GoogleFonts.poppins(\r\n            fontSize: 18,\r\n            fontWeight: FontWeight.bold,\r\n            color: Colors.teal,\r\n          ),\r\n        ),\r\n        const SizedBox(height: 8),\r\n        Card(\r\n          child: Column(\r\n            children: children,\r\n          ),\r\n        ),\r\n      ],\r\n    );\r\n  }\r\n\r\n  Widget _buildSettingTile({\r\n    required IconData icon,\r\n    required String title,\r\n    required String subtitle,\r\n    required VoidCallback onTap,\r\n  }) {\r\n    return ListTile(\r\n      leading: Icon(icon, color: Colors.teal),\r\n      title: Text(\r\n        title,\r\n        style: GoogleFonts.poppins(\r\n          fontSize: 16,\r\n          fontWeight: FontWeight.w500,\r\n        ),\r\n      ),\r\n      subtitle: Text(\r\n        subtitle,\r\n        style: GoogleFonts.poppins(\r\n          fontSize: 14,\r\n          color: Colors.grey[600],\r\n        ),\r\n      ),\r\n      trailing: const Icon(Icons.chevron_right),\r\n      onTap: onTap,\r\n    );\r\n  }\r\n} "
        }
    ]
}