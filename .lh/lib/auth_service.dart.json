{
    "sourceFile": "lib/auth_service.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 4,
            "patches": [
                {
                    "date": 1744486832266,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1744489135110,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,31 +1,36 @@\n+// auth_service.dart\r\n+\r\n import 'package:firebase_auth/firebase_auth.dart';\r\n import 'package:google_sign_in/google_sign_in.dart';\r\n \r\n class AuthService {\r\n   final FirebaseAuth _auth = FirebaseAuth.instance;\r\n   final GoogleSignIn _googleSignIn = GoogleSignIn();\r\n \r\n+  // Sign in with Google\r\n   Future<UserCredential?> signInWithGoogle() async {\r\n     try {\r\n-      // Trigger the authentication flow\r\n       final GoogleSignInAccount? googleUser = await _googleSignIn.signIn();\r\n-      if (googleUser == null) return null;\r\n+      if (googleUser == null) {\r\n+        return null; // The user canceled the sign-in\r\n+      }\r\n \r\n-      // Obtain the auth details from the request\r\n-      final GoogleSignInAuthentication googleAuth =\r\n-          await googleUser.authentication;\r\n-\r\n-      // Create a new credential\r\n-      final credential = GoogleAuthProvider.credential(\r\n+      final GoogleSignInAuthentication googleAuth = await googleUser.authentication;\r\n+      final OAuthCredential credential = GoogleAuthProvider.credential(\r\n         accessToken: googleAuth.accessToken,\r\n         idToken: googleAuth.idToken,\r\n       );\r\n \r\n-      // Sign in to Firebase with the Google credential\r\n-      return await _auth.signInWithCredential(credential);\r\n+      // Sign in to Firebase\r\n+      final UserCredential userCredential = await _auth.signInWithCredential(credential);\r\n+\r\n+      return userCredential;\r\n     } catch (e) {\r\n-      print(\"Google sign-in error: $e\");\r\n+      print(e);\r\n       return null;\r\n     }\r\n   }\r\n+\r\n+  // Get the current user\r\n+  User? get currentUser => _auth.currentUser;\r\n }\r\n"
                },
                {
                    "date": 1744489143735,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,36 +1,31 @@\n-// auth_service.dart\r\n-\r\n import 'package:firebase_auth/firebase_auth.dart';\r\n import 'package:google_sign_in/google_sign_in.dart';\r\n \r\n class AuthService {\r\n   final FirebaseAuth _auth = FirebaseAuth.instance;\r\n   final GoogleSignIn _googleSignIn = GoogleSignIn();\r\n \r\n-  // Sign in with Google\r\n   Future<UserCredential?> signInWithGoogle() async {\r\n     try {\r\n+      // Trigger the authentication flow\r\n       final GoogleSignInAccount? googleUser = await _googleSignIn.signIn();\r\n-      if (googleUser == null) {\r\n-        return null; // The user canceled the sign-in\r\n-      }\r\n+      if (googleUser == null) return null;\r\n \r\n-      final GoogleSignInAuthentication googleAuth = await googleUser.authentication;\r\n-      final OAuthCredential credential = GoogleAuthProvider.credential(\r\n+      // Obtain the auth details from the request\r\n+      final GoogleSignInAuthentication googleAuth =\r\n+          await googleUser.authentication;\r\n+\r\n+      // Create a new credential\r\n+      final credential = GoogleAuthProvider.credential(\r\n         accessToken: googleAuth.accessToken,\r\n         idToken: googleAuth.idToken,\r\n       );\r\n \r\n-      // Sign in to Firebase\r\n-      final UserCredential userCredential = await _auth.signInWithCredential(credential);\r\n-\r\n-      return userCredential;\r\n+      // Sign in to Firebase with the Google credential\r\n+      return await _auth.signInWithCredential(credential);\r\n     } catch (e) {\r\n-      print(e);\r\n+      print(\"Google sign-in error: $e\");\r\n       return null;\r\n     }\r\n   }\r\n-\r\n-  // Get the current user\r\n-  User? get currentUser => _auth.currentUser;\r\n }\r\n"
                },
                {
                    "date": 1744533888825,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,26 +9,35 @@\n \r\n   // Sign in with Google\r\n   Future<UserCredential?> signInWithGoogle() async {\r\n     try {\r\n+      // Trigger the Google Sign In flow\r\n       final GoogleSignInAccount? googleUser = await _googleSignIn.signIn();\r\n       if (googleUser == null) {\r\n-        return null; // The user canceled the sign-in\r\n+        print('Google Sign In was aborted by user');\r\n+        return null;\r\n       }\r\n \r\n+      // Obtain the auth details from the request\r\n       final GoogleSignInAuthentication googleAuth = await googleUser.authentication;\r\n+      \r\n+      // Create a new credential\r\n       final OAuthCredential credential = GoogleAuthProvider.credential(\r\n         accessToken: googleAuth.accessToken,\r\n         idToken: googleAuth.idToken,\r\n       );\r\n \r\n-      // Sign in to Firebase\r\n+      // Sign in to Firebase with the Google credential\r\n       final UserCredential userCredential = await _auth.signInWithCredential(credential);\r\n-\r\n+      \r\n+      print('Successfully signed in with Google: ${userCredential.user?.email}');\r\n       return userCredential;\r\n-    } catch (e) {\r\n-      print(e);\r\n+    } on FirebaseAuthException catch (e) {\r\n+      print('Firebase Auth Error: ${e.code} - ${e.message}');\r\n       return null;\r\n+    } on Exception catch (e) {\r\n+      print('Error during Google Sign In: $e');\r\n+      return null;\r\n     }\r\n   }\r\n \r\n   // Get the current user\r\n"
                },
                {
                    "date": 1744533899322,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,50 +1,36 @@\n-// auth_service.dart\r\n-\r\n-import 'package:firebase_auth/firebase_auth.dart';\r\n-import 'package:google_sign_in/google_sign_in.dart';\r\n-\r\n-class AuthService {\r\n-  final FirebaseAuth _auth = FirebaseAuth.instance;\r\n-  final GoogleSignIn _googleSignIn = GoogleSignIn();\r\n-\r\n-  // Sign in with Google\r\n-  Future<UserCredential?> signInWithGoogle() async {\r\n-    try {\r\n-      // Trigger the Google Sign In flow\r\n-      final GoogleSignInAccount? googleUser = await _googleSignIn.signIn();\r\n-      if (googleUser == null) {\r\n-        print('Google Sign In was aborted by user');\r\n-        return null;\r\n-      }\r\n-\r\n-      // Obtain the auth details from the request\r\n-      final GoogleSignInAuthentication googleAuth =\r\n-          await googleUser.authentication;\r\n-\r\n-      // Create a new credential\r\n-      final OAuthCredential credential = GoogleAuthProvider.credential(\r\n-        accessToken: googleAuth.accessToken,\r\n-        idToken: googleAuth.idToken,\r\n-      );\r\n-\r\n-      // Sign in to Firebase with the Google credential\r\n-      final UserCredential userCredential = await _auth.signInWithCredential(\r\n-        credential,\r\n-      );\r\n-\r\n-      print(\r\n-        'Successfully signed in with Google: ${userCredential.user?.email}',\r\n-      );\r\n-      return userCredential;\r\n-    } on FirebaseAuthException catch (e) {\r\n-      print('Firebase Auth Error: ${e.code} - ${e.message}');\r\n-      return null;\r\n-    } on Exception catch (e) {\r\n-      print('Error during Google Sign In: $e');\r\n-      return null;\r\n-    }\r\n-  }\r\n-\r\n-  // Get the current user\r\n-  User? get currentUser => _auth.currentUser;\r\n-}\r\n+// auth_service.dart\n+\n+import 'package:firebase_auth/firebase_auth.dart';\n+import 'package:google_sign_in/google_sign_in.dart';\n+\n+class AuthService {\n+  final FirebaseAuth _auth = FirebaseAuth.instance;\n+  final GoogleSignIn _googleSignIn = GoogleSignIn();\n+\n+  // Sign in with Google\n+  Future<UserCredential?> signInWithGoogle() async {\n+    try {\n+      final GoogleSignInAccount? googleUser = await _googleSignIn.signIn();\n+      if (googleUser == null) {\n+        return null; // The user canceled the sign-in\n+      }\n+\n+      final GoogleSignInAuthentication googleAuth = await googleUser.authentication;\n+      final OAuthCredential credential = GoogleAuthProvider.credential(\n+        accessToken: googleAuth.accessToken,\n+        idToken: googleAuth.idToken,\n+      );\n+\n+      // Sign in to Firebase\n+      final UserCredential userCredential = await _auth.signInWithCredential(credential);\n+\n+      return userCredential;\n+    } catch (e) {\n+      print(e);\n+      return null;\n+    }\n+  }\n+\n+  // Get the current user\n+  User? get currentUser => _auth.currentUser;\n+}\n"
                }
            ],
            "date": 1744486832266,
            "name": "Commit-0",
            "content": "import 'package:firebase_auth/firebase_auth.dart';\r\nimport 'package:google_sign_in/google_sign_in.dart';\r\n\r\nclass AuthService {\r\n  final FirebaseAuth _auth = FirebaseAuth.instance;\r\n  final GoogleSignIn _googleSignIn = GoogleSignIn();\r\n\r\n  Future<UserCredential?> signInWithGoogle() async {\r\n    try {\r\n      // Trigger the authentication flow\r\n      final GoogleSignInAccount? googleUser = await _googleSignIn.signIn();\r\n      if (googleUser == null) return null;\r\n\r\n      // Obtain the auth details from the request\r\n      final GoogleSignInAuthentication googleAuth =\r\n          await googleUser.authentication;\r\n\r\n      // Create a new credential\r\n      final credential = GoogleAuthProvider.credential(\r\n        accessToken: googleAuth.accessToken,\r\n        idToken: googleAuth.idToken,\r\n      );\r\n\r\n      // Sign in to Firebase with the Google credential\r\n      return await _auth.signInWithCredential(credential);\r\n    } catch (e) {\r\n      print(\"Google sign-in error: $e\");\r\n      return null;\r\n    }\r\n  }\r\n}\r\n"
        }
    ]
}